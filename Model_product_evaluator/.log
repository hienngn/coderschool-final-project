2020-10-18 14:05:54,663 [77541] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-18 14:05:54,663 [77541] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-18 14:05:54,663 [77541] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-18 14:05:54,687 [77541] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-18 14:05:54,689 [77541] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-18 14:05:54,689 [77541] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-18 14:17:03,340 [82247] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-18 14:17:03,341 [82247] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-18 14:17:03,341 [82247] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-18 14:17:03,346 [82247] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-18 14:17:03,347 [82247] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-18 14:17:03,347 [82247] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-18 14:17:03,864 [82247] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-18 14:17:03,865 [82247] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-18 14:17:03,865 [82247] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-18 14:17:03,870 [82247] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-18 14:17:03,871 [82247] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-18 14:17:03,871 [82247] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-18 14:26:05,053 [82247] WARNING  py.warnings:110: [JupyterRequire] /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/ipykernel_launcher.py:1: FutureWarning: Passing a negative integer is deprecated in version 1.0 and will not be supported in future version. Instead, use None to not limit the column width.
  """Entry point for launching an IPython kernel.

2020-10-18 16:14:23,272 [82247] WARNING  py.warnings:110: [JupyterRequire] /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/ipykernel_launcher.py:2: FutureWarning: Passing a negative integer is deprecated in version 1.0 and will not be supported in future version. Instead, use None to not limit the column width.
  

2020-10-18 21:30:38,436 [82247] WARNING  py.warnings:110: [JupyterRequire] /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3072: DtypeWarning: Columns (5) have mixed types.Specify dtype option on import or set low_memory=False.
  interactivity=interactivity, compiler=compiler, result=result)

2020-10-18 22:34:37,856 [82247] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-18 22:34:37,857 [82247] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-18 22:34:37,863 [82247] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=/Users/macbookpro/.matplotlib
2020-10-18 22:34:37,868 [82247] DEBUG    matplotlib:1464: [JupyterRequire] matplotlib version 3.3.0
2020-10-18 22:34:37,869 [82247] DEBUG    matplotlib:1465: [JupyterRequire] interactive is False
2020-10-18 22:34:37,869 [82247] DEBUG    matplotlib:1466: [JupyterRequire] platform is darwin
2020-10-18 22:34:37,869 [82247] DEBUG    matplotlib:1467: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_darwin_darwin', '_osx_support', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'distutils.sysconfig', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', '_uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_19', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_20', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'tqdm', 'tqdm.std', 'tqdm.utils', 'tqdm._monitor', 'tqdm.gui', 'tqdm._tqdm_pandas', 'tqdm.cli', 'tqdm._version', 'zmq.utils.garbage', 'pandas.io.formats.html', 'multiprocessing', 'multiprocessing.context', 'multiprocessing.process', 'multiprocessing.reduction', '__mp_main__', 'multiprocessing.synchronize', '_multiprocessing', 'multiprocessing.util', 'pandas.io.formats.csvs', 'sklearn', 'sklearn._config', 'sklearn._distributor_init', 'sklearn.__check_build', 'sklearn.__check_build._check_build', 'sklearn.base', 'sklearn.utils', 'scipy', 'scipy._lib', 'scipy._lib._testutils', 'scipy._lib.deprecation', 'scipy._distributor_init', 'scipy.__config__', 'scipy.version', 'scipy._lib._version', 'scipy._lib.six', 'scipy._lib._ccallback', 'scipy._lib._ccallback_c', 'scipy.fft', 'scipy.fft._basic', 'scipy._lib.uarray', 'scipy._lib._uarray', 'scipy._lib._uarray._backend', 'scipy._lib._uarray._uarray', 'scipy.fft._realtransforms', 'scipy.fft._helper', 'scipy.fft._pocketfft', 'scipy.fft._pocketfft.basic', 'scipy.fft._pocketfft.pypocketfft', 'scipy.fft._pocketfft.helper', 'scipy.fft._pocketfft.realtransforms', 'scipy.fft._backend', 'numpy.dual', 'scipy.sparse', 'scipy.sparse.base', 'scipy._lib._numpy_compat', 'numpy.testing', 'unittest', 'unittest.result', 'unittest.util', 'unittest.case', 'unittest.suite', 'unittest.loader', 'unittest.main', 'unittest.runner', 'unittest.signals', 'numpy.testing._private', 'numpy.testing._private.utils', 'numpy.testing._private.decorators', 'numpy.testing._private.nosetester', 'scipy.sparse.sputils', 'scipy.sparse.csr', 'scipy.sparse._sparsetools', 'scipy.sparse.compressed', 'scipy._lib._util', 'scipy.sparse.data', 'scipy.sparse.dia', 'scipy.sparse._index', 'scipy.sparse.csc', 'scipy.sparse.lil', 'scipy.sparse._csparsetools', 'scipy.sparse.dok', 'scipy.sparse.coo', 'scipy.sparse.bsr', 'scipy.sparse.construct', 'scipy.sparse.extract', 'scipy.sparse._matrix_io', 'scipy.sparse.csgraph', 'scipy.sparse.csgraph._laplacian', 'scipy.sparse.csgraph._shortest_path', '_cython_0_29_14', 'scipy.sparse.csgraph._validation', 'scipy.sparse.csgraph._tools', 'scipy.sparse.csgraph._traversal', 'scipy.sparse.csgraph._min_spanning_tree', 'scipy.sparse.csgraph._flow', 'scipy.sparse.csgraph._matching', 'scipy.sparse.csgraph._reordering', 'sklearn.utils.murmurhash', 'sklearn.utils.class_weight', 'sklearn.utils.validation', 'joblib', 'joblib.memory', 'joblib.hashing', 'joblib.func_inspect', 'joblib.logger', 'joblib.disk', 'joblib._store_backends', 'joblib.backports', 'joblib.numpy_pickle', 'joblib.compressor', 'joblib.numpy_pickle_utils', 'joblib.numpy_pickle_compat', 'joblib.parallel', 'joblib._multiprocessing_helpers', 'joblib._parallel_backends', 'joblib.my_exceptions', 'joblib._deprecated_my_exceptions', 'joblib.pool', 'joblib._memmapping_reducer', 'joblib.externals', 'joblib.externals.loky', 'joblib.externals.loky._base', 'joblib.externals.loky.backend', 'joblib.externals.loky.backend.context', 'joblib.externals.loky.backend.process', 'joblib.externals.loky.backend.compat', 'joblib.externals.loky.backend.compat_posix', 'multiprocessing.connection', 'joblib.externals.loky.backend.reduction', 'joblib.externals.loky.backend._posix_reduction', 'joblib.externals.cloudpickle', 'joblib.externals.cloudpickle.cloudpickle', 'joblib.externals.loky.reusable_executor', 'joblib.externals.loky.process_executor', 'joblib.externals.loky.backend.queues', 'multiprocessing.queues', 'joblib.externals.loky.backend.utils', 'concurrent.futures.process', 'joblib.externals.loky.cloudpickle_wrapper', 'joblib.externals.loky.backend.resource_tracker', 'joblib.externals.loky.backend.spawn', 'multiprocessing.pool', 'joblib.executor', 'sklearn.utils.fixes', 'scipy.stats', 'scipy.stats.stats', 'scipy.spatial', 'scipy.spatial.kdtree', 'scipy.spatial.ckdtree', 'scipy.spatial.qhull', 'scipy._lib.messagestream', 'scipy.spatial._spherical_voronoi', 'scipy.spatial._voronoi', 'scipy.spatial._plotutils', 'scipy._lib.decorator', 'scipy.spatial._procrustes', 'scipy.linalg', 'scipy.linalg.linalg_version', 'scipy.linalg.misc', 'scipy.linalg.blas', 'scipy.linalg._fblas', 'scipy.linalg.lapack', 'scipy.linalg._flapack', 'scipy.linalg.basic', 'scipy.linalg.flinalg', 'scipy.linalg._flinalg', 'scipy.linalg.decomp', 'scipy.linalg.decomp_svd', 'scipy.linalg._solve_toeplitz', 'scipy.linalg.decomp_lu', 'scipy.linalg._decomp_ldl', 'scipy.linalg.decomp_cholesky', 'scipy.linalg.decomp_qr', 'scipy.linalg._decomp_qz', 'scipy.linalg.decomp_schur', 'scipy.linalg._decomp_polar', 'scipy.linalg.matfuncs', 'scipy.linalg.special_matrices', 'scipy.linalg._expm_frechet', 'scipy.linalg._matfuncs_sqrtm', 'scipy.linalg._solvers', 'scipy.linalg._procrustes', 'scipy.linalg._decomp_update', 'scipy.linalg.cython_blas', 'scipy.linalg.cython_lapack', 'scipy.linalg._sketches', 'scipy.spatial.distance', 'scipy.spatial._distance_wrap', 'scipy.spatial._hausdorff', 'scipy.special', 'scipy.special.sf_error', 'scipy.special._ufuncs', 'scipy.special._ufuncs_cxx', 'scipy.special._basic', 'scipy.special.specfun', 'scipy.special.orthogonal', 'scipy.special._comb', 'scipy.special._logsumexp', 'scipy.special.spfun_stats', 'scipy.special._ellip_harm', 'scipy.special._ellip_harm_2', 'scipy.special.lambertw', 'scipy.special._spherical_bessel', 'scipy.spatial.transform', 'scipy.spatial.transform.rotation', 'scipy.spatial.transform._rotation_groups', 'scipy.constants', 'scipy.constants.codata', 'scipy.constants.constants', 'scipy.spatial.transform._rotation_spline', 'scipy.ndimage', 'scipy.ndimage.filters', 'scipy.ndimage._ni_support', 'scipy.ndimage._nd_image', 'scipy.ndimage._ni_docstrings', 'scipy._lib.doccer', 'scipy.ndimage.fourier', 'scipy.ndimage.interpolation', 'scipy.ndimage.measurements', 'scipy.ndimage._ni_label', '_ni_label', 'scipy.ndimage.morphology', 'scipy.stats.distributions', 'scipy.stats._distn_infrastructure', 'scipy.stats._distr_params', 'scipy.optimize', 'scipy.optimize.optimize', 'scipy.optimize.linesearch', 'scipy.optimize.minpack2', 'scipy.optimize._minimize', 'scipy.optimize._trustregion_dogleg', 'scipy.optimize._trustregion', 'scipy.optimize._trustregion_ncg', 'scipy.optimize._trustregion_krylov', 'scipy.optimize._trlib', 'scipy.optimize._trlib._trlib', 'scipy.optimize._trustregion_exact', 'scipy.optimize._trustregion_constr', 'scipy.optimize._trustregion_constr.minimize_trustregion_constr', 'scipy.sparse.linalg', 'scipy.sparse.linalg.isolve', 'scipy.sparse.linalg.isolve.iterative', 'scipy.sparse.linalg.isolve._iterative', 'scipy.sparse.linalg.interface', 'scipy.sparse.linalg.isolve.utils', 'scipy._lib._threadsafety', 'scipy.sparse.linalg.isolve.minres', 'scipy.sparse.linalg.isolve.lgmres', 'scipy.sparse.linalg.isolve._gcrotmk', 'scipy.sparse.linalg.isolve.lsqr', 'scipy.sparse.linalg.isolve.lsmr', 'scipy.sparse.linalg.dsolve', 'scipy.sparse.linalg.dsolve.linsolve', 'scipy.sparse.linalg.dsolve._superlu', 'scipy.sparse.linalg.dsolve._add_newdocs', 'scipy.sparse.linalg.eigen', 'scipy.sparse.linalg.eigen.arpack', 'scipy.sparse.linalg.eigen.arpack.arpack', 'scipy.sparse.linalg.eigen.arpack._arpack', 'scipy.sparse.linalg.eigen.lobpcg', 'scipy.sparse.linalg.eigen.lobpcg.lobpcg', 'scipy.sparse.linalg.matfuncs', 'scipy.sparse.linalg._expm_multiply', 'scipy.sparse.linalg._onenormest', 'scipy.sparse.linalg._norm', 'scipy.optimize._differentiable_functions', 'scipy.optimize._numdiff', 'scipy.optimize._group_columns', 'scipy.optimize._hessian_update_strategy', 'scipy.optimize._constraints', 'scipy.optimize._trustregion_constr.equality_constrained_sqp', 'scipy.optimize._trustregion_constr.projections', 'scipy.optimize._trustregion_constr.qp_subproblem', 'scipy.optimize._trustregion_constr.canonical_constraint', 'scipy.optimize._trustregion_constr.tr_interior_point', 'scipy.optimize._trustregion_constr.report', 'scipy.optimize.lbfgsb', 'scipy.optimize._lbfgsb', 'scipy.optimize.tnc', 'scipy.optimize.moduleTNC', 'scipy.optimize.cobyla', 'scipy.optimize._cobyla', 'scipy.optimize.slsqp', 'scipy.optimize._slsqp', 'scipy.optimize._root', 'scipy.optimize.minpack', 'scipy.optimize._minpack', 'scipy.optimize._lsq', 'scipy.optimize._lsq.least_squares', 'scipy.optimize._lsq.trf', 'scipy.optimize._lsq.common', 'scipy.optimize._lsq.dogbox', 'scipy.optimize._lsq.lsq_linear', 'scipy.optimize._lsq.trf_linear', 'scipy.optimize._lsq.givens_elimination', 'scipy.optimize._lsq.bvls', 'scipy.optimize._spectral', 'scipy.optimize.nonlin', 'scipy.optimize._root_scalar', 'scipy.optimize.zeros', 'scipy.optimize._zeros', 'scipy.optimize.nnls', 'scipy.optimize._nnls', 'scipy.optimize._basinhopping', 'scipy.optimize._linprog', 'scipy.optimize._linprog_ip', 'scipy.optimize._linprog_util', 'scipy.optimize._remove_redundancy', 'scipy.optimize._linprog_simplex', 'scipy.optimize._linprog_rs', 'scipy.optimize._bglu_dense', 'scipy.optimize._lsap', 'scipy.optimize._lsap_module', 'scipy.optimize._differentialevolution', 'scipy.optimize._shgo', 'scipy.optimize._shgo_lib', 'scipy.optimize._shgo_lib.sobol_seq', 'scipy.optimize._shgo_lib.triangulation', 'scipy.optimize._dual_annealing', 'scipy.integrate', 'scipy.integrate.quadrature', 'scipy.integrate.odepack', 'scipy.integrate._odepack', 'scipy.integrate.quadpack', 'scipy.integrate._quadpack', 'scipy.integrate._ode', 'scipy.integrate.vode', 'scipy.integrate._dop', 'scipy.integrate.lsoda', 'scipy.integrate._bvp', 'scipy.integrate._ivp', 'scipy.integrate._ivp.ivp', 'scipy.integrate._ivp.bdf', 'scipy.integrate._ivp.common', 'scipy.integrate._ivp.base', 'scipy.integrate._ivp.radau', 'scipy.integrate._ivp.rk', 'scipy.integrate._ivp.dop853_coefficients', 'scipy.integrate._ivp.lsoda', 'scipy.integrate._quad_vec', 'scipy.misc', 'scipy.misc.doccer', 'scipy.misc.common', 'scipy.stats._constants', 'scipy.stats._continuous_distns', 'scipy.interpolate', 'scipy.interpolate.interpolate', 'scipy.interpolate.fitpack', 'scipy.interpolate._fitpack_impl', 'scipy.interpolate._fitpack', 'scipy.interpolate.dfitpack', 'scipy.interpolate._bsplines', 'scipy.interpolate._bspl', 'scipy.interpolate.polyint', 'scipy.interpolate._ppoly', 'scipy.interpolate.fitpack2', 'scipy.interpolate.interpnd', 'scipy.interpolate.rbf', 'scipy.interpolate._cubic', 'scipy.interpolate.ndgriddata', 'scipy.interpolate._pade', 'scipy.stats._stats', 'scipy.stats._tukeylambda_stats', 'scipy.stats._discrete_distns', 'scipy.stats.mstats_basic', 'scipy.stats._stats_mstats_common', 'scipy.stats._rvs_sampling', 'scipy.stats._hypotests', 'scipy.stats.morestats', 'scipy.stats.statlib', 'scipy.stats.contingency', 'scipy.stats._binned_statistic', 'scipy.stats.kde', 'scipy.stats.mvn', 'scipy.stats.mstats', 'scipy.stats.mstats_extras', 'scipy.stats._multivariate', 'sklearn.utils.deprecation', 'pkg_resources', 'pkg_resources.extern', 'pkg_resources._vendor', 'pkg_resources._vendor.six', 'pkg_resources.extern.six', 'pkg_resources._vendor.six.moves', 'pkg_resources.extern.six.moves', 'pkg_resources._vendor.appdirs', 'pkg_resources.extern.appdirs', 'pkg_resources._vendor.packaging', 'pkg_resources._vendor.packaging.__about__', 'pkg_resources.extern.packaging', 'pkg_resources.extern.packaging.version', 'pkg_resources.extern.packaging._structures', 'pkg_resources.extern.packaging.specifiers', 'pkg_resources.extern.packaging._compat', 'pkg_resources.extern.packaging.requirements', 'pkg_resources._vendor.pyparsing', 'pkg_resources.extern.pyparsing', 'pkg_resources._vendor.six.moves.urllib', 'pkg_resources.extern.six.moves.urllib', 'pkg_resources.extern.packaging.markers', 'sklearn.exceptions', 'sklearn.utils._joblib', 'sklearn.utils._estimator_html_repr', 'sklearn.utils._show_versions', 'sklearn.utils._openmp_helpers', 'sklearn.pipeline', 'sklearn.utils.metaestimators', 'sklearn.model_selection', 'sklearn.model_selection._split', 'sklearn.utils.multiclass', 'sklearn.model_selection._validation', 'sklearn.metrics', 'sklearn.metrics._ranking', 'sklearn.utils.extmath', 'sklearn.utils._logistic_sigmoid', 'sklearn.utils.sparsefuncs_fast', '_cython_0_29_21', 'sklearn.utils.sparsefuncs', 'sklearn.preprocessing', 'sklearn.preprocessing._function_transformer', 'sklearn.preprocessing._data', 'sklearn.preprocessing._csr_polynomial_expansion', 'sklearn.preprocessing._encoders', 'sklearn.preprocessing._label', 'sklearn.preprocessing._discretization', 'sklearn.metrics._base', 'sklearn.metrics._classification', 'sklearn.metrics.cluster', 'sklearn.metrics.cluster._supervised', 'sklearn.metrics.cluster._expected_mutual_info_fast', 'sklearn.metrics.cluster._unsupervised', 'sklearn.metrics.pairwise', 'sklearn.utils._mask', 'sklearn.metrics._pairwise_fast', 'sklearn.metrics.cluster._bicluster', 'sklearn.metrics._regression', 'sklearn._loss', 'sklearn._loss.glm_distribution', 'sklearn.metrics._scorer', 'sklearn.metrics._plot', 'sklearn.metrics._plot.roc_curve', 'sklearn.metrics._plot.base', 'sklearn.metrics._plot.precision_recall_curve', 'sklearn.metrics._plot.confusion_matrix', 'sklearn.model_selection._search', 'sklearn.utils.random', 'sklearn.utils._random', 'sklearn.ensemble', 'sklearn.ensemble._base', 'sklearn.ensemble._forest', 'sklearn.tree', 'sklearn.tree._classes', 'sklearn.tree._criterion', 'sklearn.tree._splitter', 'sklearn.tree._tree', 'sklearn.neighbors', 'sklearn.neighbors._ball_tree', 'sklearn.neighbors._dist_metrics', 'sklearn.neighbors._typedefs', 'sklearn.neighbors._kd_tree', 'sklearn.neighbors._graph', 'sklearn.neighbors._base', 'sklearn.neighbors._unsupervised', 'sklearn.neighbors._classification', 'sklearn.neighbors._regression', 'sklearn.neighbors._nearest_centroid', 'sklearn.neighbors._kde', 'sklearn.neighbors._lof', 'sklearn.neighbors._nca', 'sklearn.decomposition', 'sklearn.decomposition.dict_learning', 'sklearn.decomposition._dict_learning', 'sklearn.linear_model', 'sklearn.linear_model._base', 'sklearn.utils._seq_dataset', 'sklearn.linear_model._bayes', 'sklearn.linear_model._least_angle', 'sklearn.utils.arrayfuncs', 'sklearn.utils._cython_blas', 'sklearn.linear_model._coordinate_descent', 'sklearn.linear_model._cd_fast', 'sklearn.linear_model._glm', 'sklearn.linear_model._glm.glm', 'sklearn.utils.optimize', 'sklearn.linear_model._glm.link', 'sklearn.linear_model._huber', 'sklearn.linear_model._sgd_fast', 'sklearn.utils._weight_vector', 'sklearn.linear_model._stochastic_gradient', 'sklearn.linear_model._ridge', 'sklearn.linear_model._sag', 'sklearn.linear_model._sag_fast', 'sklearn.linear_model._logistic', 'sklearn.svm', 'sklearn.svm._classes', 'sklearn.svm._base', 'sklearn.svm._libsvm', 'sklearn.svm._liblinear', 'sklearn.svm._libsvm_sparse', 'sklearn.svm._bounds', 'sklearn.linear_model._omp', 'sklearn.linear_model._passive_aggressive', 'sklearn.linear_model._perceptron', 'sklearn.linear_model._ransac', 'sklearn.linear_model._theil_sen', 'sklearn.externals', 'sklearn.externals._pep562', 'sklearn.decomposition._nmf', 'sklearn.decomposition._cdnmf_fast', 'sklearn.decomposition._pca', 'sklearn.decomposition._base', 'sklearn.decomposition._incremental_pca', 'sklearn.decomposition._kernel_pca', 'sklearn.decomposition._sparse_pca', 'sklearn.decomposition._truncated_svd', 'sklearn.decomposition._fastica', 'sklearn.decomposition._factor_analysis', 'sklearn.decomposition._lda', 'sklearn.decomposition._online_lda_fast', 'sklearn.neighbors._quad_tree', 'sklearn.tree._utils', 'sklearn.tree._export', 'sklearn.tree._reingold_tilford', 'sklearn.ensemble._bagging', 'sklearn.ensemble._iforest', 'sklearn.ensemble._weight_boosting', 'sklearn.ensemble._gb', 'sklearn.ensemble._gradient_boosting', 'sklearn.ensemble._gb_losses', 'sklearn.utils.stats', 'sklearn.dummy', 'sklearn.ensemble._voting', 'sklearn.ensemble._stacking', 'sklearn.utils._pprint', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2020-10-18 22:34:37,944 [82247] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=/Users/macbookpro/.matplotlib
2020-10-18 22:34:37,953 [82247] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from /Users/macbookpro/.matplotlib/fontlist-v330.json
2020-10-18 22:34:38,265 [82247] DEBUG    matplotlib.pyplot:273: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-18 22:34:38,267 [82247] DEBUG    matplotlib.pyplot:273: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-18 22:35:09,611 [82247] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x18035de50>
2020-10-18 22:35:09,611 [82247] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x18035de50> on colorbar
2020-10-18 22:35:09,611 [82247] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
2020-10-18 22:35:09,664 [82247] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-18 22:35:09,665 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,665 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,665 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,665 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,665 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,666 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,666 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,666 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-18 22:35:09,666 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-10-18 22:35:09,666 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,666 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,666 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,666 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,666 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,667 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,667 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,667 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,667 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,667 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,667 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,667 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,667 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,668 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,668 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,668 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-18 22:35:09,668 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-10-18 22:35:09,668 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,668 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-10-18 22:35:09,668 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,668 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,668 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,669 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,669 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,669 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,669 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,669 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,669 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,669 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-18 22:35:09,669 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,670 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,670 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,670 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,670 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,670 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,670 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,670 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,670 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,670 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tsukushi A Round Gothic' (TsukushiAMaruGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,670 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,671 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,671 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Mincho' (ToppanBunkyuMincho-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,671 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,671 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,671 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,671 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,672 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,672 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,672 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,672 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,672 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,672 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,672 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:09,672 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,673 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,673 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,673 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,673 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,673 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,673 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,673 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,674 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,674 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'BiauKai' (BiauKai.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,674 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,674 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PMingLiU-ExtB' (PMingLiU-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,675 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,675 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,675 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,675 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,675 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuanti SC' (Yuanti.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,676 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gurmukhi' (AdobeGurmukhi-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,676 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibril.ttf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,676 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,676 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,676 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2020-10-18 22:35:09,676 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,677 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,677 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,677 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-RegularItalic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal 580 condensed>) = 10.421
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Gothic' (NanumGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,678 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,679 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:09,679 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Black.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,679 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,679 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,679 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Midashi Mincho' (ToppanBunkyuMidashiMincho-ExtraBold.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,679 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal 394 condensed>) = 10.2557
2020-10-18 22:35:09,679 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuGothic' (Yu Gothic Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,679 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (Franklin Gothic Medium Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kaiti SC' (Kaiti.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,680 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,681 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,681 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,681 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,681 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,681 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,682 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,682 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,682 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,682 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,682 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lantinghei SC' (Lantinghei.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,682 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,682 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,682 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,683 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLight.otf) normal normal 200 normal>) = 10.24
2020-10-18 22:35:09,683 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimHei' (SimHei.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,683 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN W3.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,683 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,683 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,683 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,683 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,684 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,684 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STHeiti' (华文细黑.ttf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,684 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,684 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2020-10-18 22:35:09,684 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,684 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,684 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,685 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-10-18 22:35:09,685 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,685 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tsukushi B Round Gothic' (TsukushiBMaruGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,685 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,685 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,685 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,685 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PilGi' (Pilgiche.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,685 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,685 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:09,685 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 434 condensed>) = 10.2823
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-HeavyItalic.otf) italic normal 800 normal>) = 11.43
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,686 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS PMincho' (MS PMincho.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,687 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,687 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,687 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,687 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,687 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,687 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,687 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,688 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,688 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,688 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,688 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,688 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,688 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,688 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,688 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,688 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,688 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wawati TC' (WawaTC-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,689 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,689 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2020-10-18 22:35:09,689 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,689 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,689 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB W3.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,689 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,689 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:09,689 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,690 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,690 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Myeongjo' (NanumMyeongjo.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,690 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
2020-10-18 22:35:09,690 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BlackIt.otf) italic normal 900 normal>) = 11.525
2020-10-18 22:35:09,692 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,693 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,694 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baoli SC' (Baoli.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,695 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,695 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,695 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Weibei SC' (WeibeiSC-Bold.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,695 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (Lucida Sans Unicode.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (SimSun-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STFangsong' (华文仿宋.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuGothic' (Yu Gothic Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,696 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal 504 condensed>) = 10.348799999999999
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wawati SC' (WawaSC-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,697 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-LightIt.otf) italic normal 300 normal>) = 11.145
2020-10-18 22:35:09,698 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,698 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,698 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,698 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,699 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hei' (Hei.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,699 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,699 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,699 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PMingLiU' (PMingLiU.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,699 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STHeiti' (华文黑体.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,700 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,700 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,700 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,700 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal 835 condensed>) = 10.66325
2020-10-18 22:35:09,701 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,701 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,701 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (TaiLeb.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,701 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,701 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HeadLineA' (HeadlineA.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,701 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-18 22:35:09,702 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB W6.ttc) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,702 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,702 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,702 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,702 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,702 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,702 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,702 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,703 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,703 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,703 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,703 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,703 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2020-10-18 22:35:09,703 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,703 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,703 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-18 22:35:09,704 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,704 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PCMyungjo' (PCmyoungjo.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,704 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,704 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,704 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:09,704 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,704 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,704 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,704 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,704 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,705 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,705 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,705 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,705 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,705 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,705 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,705 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,705 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LingWai TC' (LingWaiTC-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,706 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,706 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSTextItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,706 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LiSong Pro' (儷宋 Pro.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,706 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,706 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,706 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,706 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,706 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,706 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,706 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Midashi Gothic' (ToppanBunkyuMidashiGothic-ExtraBold.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,707 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,707 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,707 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LiHei Pro' (儷黑 Pro.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,707 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,707 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,707 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,707 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-18 22:35:09,707 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,707 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,707 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,708 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,708 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kai' (Kai.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,708 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Thin.otf) normal normal 200 normal>) = 10.24
2020-10-18 22:35:09,708 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuppy SC' (YuppySC-Regular.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,708 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal 900 condensed>) = 10.725
2020-10-18 22:35:09,708 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,708 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,709 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,709 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,709 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,709 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,709 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,709 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,709 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:09,709 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2020-10-18 22:35:09,709 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (Bookshelf Symbol 7.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,710 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,710 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,710 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (MingLiU-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,710 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,710 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,710 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,710 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,710 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,711 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:09,711 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal 607 condensed>) = 10.44665
2020-10-18 22:35:09,711 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,711 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,711 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Klee' (Klee.ttc) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,711 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,711 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,712 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,712 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal 512 condensed>) = 10.356399999999999
2020-10-18 22:35:09,712 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Black.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,712 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer11' (TeamViewer11.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,712 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,712 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2020-10-18 22:35:09,712 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2020-10-18 22:35:09,712 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-10-18 22:35:09,713 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,713 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,713 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,713 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,713 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,713 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
2020-10-18 22:35:09,713 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,714 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,714 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,714 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,714 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,714 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,714 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,714 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-10-18 22:35:09,715 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (MS Gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,716 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,716 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,716 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuMincho' (YuMincho.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,716 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,716 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,716 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,716 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,716 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,716 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,716 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,717 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,717 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,717 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal 798 condensed>) = 10.6281
2020-10-18 22:35:09,717 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,717 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN W6.ttc) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,718 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,718 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,718 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,718 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,718 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:09,718 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,719 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-18 22:35:09,719 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSText.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,719 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,719 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,719 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,719 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal 775 condensed>) = 10.60625
2020-10-18 22:35:09,719 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,719 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,719 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2020-10-18 22:35:09,720 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-MediumItalic.otf) italic normal 500 normal>) = 11.145
2020-10-18 22:35:09,720 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,720 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2020-10-18 22:35:09,720 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,720 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gurmukhi' (AdobeGurmukhi-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,720 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2020-10-18 22:35:09,720 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,720 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,720 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Mincho' (MS Mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,721 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,721 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (MS Reference Specialty.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,721 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,721 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,721 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Thin.otf) normal normal 200 normal>) = 10.24
2020-10-18 22:35:09,721 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,721 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,722 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,722 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,722 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,722 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLightIt.otf) italic normal 200 normal>) = 11.24
2020-10-18 22:35:09,722 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,723 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,723 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuppy TC' (YuppyTC-Regular.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,724 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-18 22:35:09,724 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,725 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,725 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,725 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,725 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,726 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,726 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,726 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,726 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,726 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,726 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GungSeo' (Gungseouche.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,726 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal 408 condensed>) = 10.2576
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,727 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,728 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,729 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
2020-10-18 22:35:09,729 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,729 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,729 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,729 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,729 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,730 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,730 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,730 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Osaka' (OsakaMono.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,730 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,730 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,730 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,730 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,730 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,730 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU' (MingLiU.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,731 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal 303 condensed>) = 10.34215
2020-10-18 22:35:09,731 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2020-10-18 22:35:09,731 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-10-18 22:35:09,731 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Brush Script' (NanumScript.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,731 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,731 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple LiSung' (Apple LiSung Light.ttf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,731 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,731 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trajan Pro 3' (TrajanPro3-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,731 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,732 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:09,732 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria Math' (Cambria Math.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,732 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hannotate SC' (Hannotate.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,732 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (MS Reference Sans Serif.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,732 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Osaka' (Osaka.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,732 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,732 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal 707 condensed>) = 10.541649999999999
2020-10-18 22:35:09,732 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU_HKSCS-ExtB' (MingLiU_HKSCS-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,733 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,733 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,733 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal 643 condensed>) = 10.480849999999998
2020-10-18 22:35:09,733 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,733 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Ultralight.otf) normal normal 100 normal>) = 10.335
2020-10-18 22:35:09,733 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2020-10-18 22:35:09,734 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-10-18 22:35:09,734 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,734 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (Marlett.ttf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,734 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Ultralight.otf) normal normal 100 normal>) = 10.335
2020-10-18 22:35:09,734 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (Lucida Console.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,734 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,734 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans CNS' (Hiragino Sans CNS.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,734 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,734 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,735 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Libian SC' (Libian.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,735 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,735 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Batang' (Batang.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,735 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,735 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-LightItalic.otf) italic normal 300 normal>) = 11.145
2020-10-18 22:35:09,735 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,735 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,736 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,736 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,736 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,736 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,736 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal 710 condensed>) = 10.5445
2020-10-18 22:35:09,736 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,736 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,736 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU_HKSCS' (mingliu_hkscs.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,736 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,736 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (Franklin Gothic Book.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,737 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,737 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LingWai SC' (LingWaiSC-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,737 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,737 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,737 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,737 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (SimSun.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,737 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (Franklin Gothic Medium.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,737 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Weibei TC' (WeibeiTC-Bold.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,738 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,738 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,738 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Xingkai SC' (Xingkai.ttc) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,738 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (Franklin Gothic Book Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,738 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2020-10-18 22:35:09,738 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2020-10-18 22:35:09,738 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gulim' (Gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,738 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,738 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,738 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuKyokasho Yoko' (Kyokasho.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,739 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2020-10-18 22:35:09,739 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,739 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple LiGothic' (Apple LiGothic Medium.ttf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,739 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,739 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:09,739 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:09,739 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,739 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:09,739 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,740 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,740 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Gothic' (ToppanBunkyuGothic.ttc) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,740 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HanziPen SC' (Hanzipen.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,740 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,740 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,740 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,740 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:09,740 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,740 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:09,741 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:09,741 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,741 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,741 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
2020-10-18 22:35:09,741 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,742 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,742 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,742 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,742 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,742 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,742 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,742 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,742 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:09,742 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,743 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,743 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,743 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,743 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,743 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:09,743 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,743 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS PGothic' (MS PGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,744 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:09,744 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,744 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Black.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:09,744 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trajan Pro 3' (TrajanPro3-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,744 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-10-18 22:35:09,744 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,744 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:09,744 [82247] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('/Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-18 22:35:11,814 [82247] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2020-10-18 22:35:11,816 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,816 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,816 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,816 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,816 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,817 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,817 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,817 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 0.05
2020-10-18 22:35:11,817 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-10-18 22:35:11,817 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,817 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,817 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,818 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,818 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,818 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,818 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,818 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,818 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,818 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,819 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,819 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,819 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,819 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,819 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,819 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 1.05
2020-10-18 22:35:11,819 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 1.335
2020-10-18 22:35:11,819 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,820 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-10-18 22:35:11,820 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,820 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,820 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,820 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,820 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,820 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,820 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,821 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,821 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,821 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-18 22:35:11,821 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,821 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,821 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,821 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,821 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,821 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,822 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,822 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,822 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,822 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tsukushi A Round Gothic' (TsukushiAMaruGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,822 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,822 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,823 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Mincho' (ToppanBunkyuMincho-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,823 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,824 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,825 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,825 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,825 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,825 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,826 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,826 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,826 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,826 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,826 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:11,826 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,826 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,826 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,826 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,826 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,827 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,827 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,827 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,827 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,827 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'BiauKai' (BiauKai.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,827 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,827 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PMingLiU-ExtB' (PMingLiU-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,827 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,827 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,827 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuanti SC' (Yuanti.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gurmukhi' (AdobeGurmukhi-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibril.ttf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,828 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-RegularItalic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 2.872272727272727
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal 580 condensed>) = 10.421
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Gothic' (NanumGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,829 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Black.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Midashi Mincho' (ToppanBunkyuMidashiMincho-ExtraBold.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal 394 condensed>) = 10.2557
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuGothic' (Yu Gothic Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,830 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,831 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,831 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,831 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,831 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,831 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (Franklin Gothic Medium Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,831 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kaiti SC' (Kaiti.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,831 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,831 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lantinghei SC' (Lantinghei.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,832 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,833 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,833 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,833 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLight.otf) normal normal 200 normal>) = 10.24
2020-10-18 22:35:11,833 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimHei' (SimHei.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,833 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN W3.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,833 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,833 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,834 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,834 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,834 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,834 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STHeiti' (华文细黑.ttf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,834 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,834 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2020-10-18 22:35:11,834 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,834 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,834 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,835 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-10-18 22:35:11,835 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,835 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tsukushi B Round Gothic' (TsukushiBMaruGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,835 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,835 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,835 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,835 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PilGi' (Pilgiche.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,835 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,835 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:11,836 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 434 condensed>) = 10.2823
2020-10-18 22:35:11,836 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:11,836 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-HeavyItalic.otf) italic normal 800 normal>) = 11.43
2020-10-18 22:35:11,836 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,836 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,836 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,836 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-18 22:35:11,836 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,836 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-10-18 22:35:11,837 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,837 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,837 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS PMincho' (MS PMincho.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,837 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,837 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,837 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,838 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,839 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,839 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,839 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wawati TC' (WawaTC-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,839 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,839 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 7.698636363636363
2020-10-18 22:35:11,839 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,839 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB W3.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Myeongjo' (NanumMyeongjo.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BlackIt.otf) italic normal 900 normal>) = 11.525
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,840 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baoli SC' (Baoli.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,841 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,841 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,841 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Weibei SC' (WeibeiSC-Bold.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,841 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (Lucida Sans Unicode.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,841 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
2020-10-18 22:35:11,841 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (SimSun-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,841 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,841 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,842 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,842 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,842 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STFangsong' (华文仿宋.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,842 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuGothic' (Yu Gothic Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,842 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,842 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,842 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,843 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
2020-10-18 22:35:11,843 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-10-18 22:35:11,843 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,843 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,843 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal 504 condensed>) = 10.348799999999999
2020-10-18 22:35:11,844 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,844 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,844 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,844 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,844 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wawati SC' (WawaSC-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,844 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,845 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-LightIt.otf) italic normal 300 normal>) = 11.145
2020-10-18 22:35:11,845 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,845 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,845 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,845 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,845 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hei' (Hei.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,845 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,845 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,846 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PMingLiU' (PMingLiU.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,846 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STHeiti' (华文黑体.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,846 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,846 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,846 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,846 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal 835 condensed>) = 10.66325
2020-10-18 22:35:11,846 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,846 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,846 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (TaiLeb.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,846 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,847 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HeadLineA' (HeadlineA.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,847 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-18 22:35:11,847 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB W6.ttc) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,847 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,847 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,847 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,848 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,848 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,848 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,848 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,848 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,848 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,848 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,848 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,849 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 7.413636363636363
2020-10-18 22:35:11,849 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,849 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,849 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-18 22:35:11,849 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,849 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PCMyungjo' (PCmyoungjo.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,849 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,849 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,849 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,850 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,851 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,851 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LingWai TC' (LingWaiTC-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,851 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,851 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSTextItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,851 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LiSong Pro' (儷宋 Pro.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,851 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,851 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,851 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,851 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,851 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Midashi Gothic' (ToppanBunkyuMidashiGothic-ExtraBold.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LiHei Pro' (儷黑 Pro.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,852 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,853 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,853 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,853 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kai' (Kai.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,853 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Thin.otf) normal normal 200 normal>) = 10.24
2020-10-18 22:35:11,853 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuppy SC' (YuppySC-Regular.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,853 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal 900 condensed>) = 10.725
2020-10-18 22:35:11,853 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,854 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,854 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,854 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,854 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,854 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,854 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,854 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,855 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:11,855 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2020-10-18 22:35:11,855 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (Bookshelf Symbol 7.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,855 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,855 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,855 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (MingLiU-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,855 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,855 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,856 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,856 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,856 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,856 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:11,856 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal 607 condensed>) = 10.44665
2020-10-18 22:35:11,856 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,856 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,856 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Klee' (Klee.ttc) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,857 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,857 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,857 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,857 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal 512 condensed>) = 10.356399999999999
2020-10-18 22:35:11,857 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Black.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,857 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer11' (TeamViewer11.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,857 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,857 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2020-10-18 22:35:11,858 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2020-10-18 22:35:11,858 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 6.413636363636363
2020-10-18 22:35:11,858 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,858 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,858 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,858 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,858 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,859 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
2020-10-18 22:35:11,859 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,859 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,859 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,859 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,859 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,859 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,859 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,859 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,860 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2020-10-18 22:35:11,860 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,860 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,860 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,860 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,860 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,860 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,860 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,860 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,860 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-10-18 22:35:11,861 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (MS Gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,861 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,861 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,861 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuMincho' (YuMincho.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,861 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,861 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,861 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal 798 condensed>) = 10.6281
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN W6.ttc) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,862 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,863 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,863 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,863 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:11,863 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,863 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-18 22:35:11,863 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSText.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,863 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,864 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,864 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,864 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal 775 condensed>) = 10.60625
2020-10-18 22:35:11,864 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,864 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,865 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 4.971363636363637
2020-10-18 22:35:11,865 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-MediumItalic.otf) italic normal 500 normal>) = 11.145
2020-10-18 22:35:11,865 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,866 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2020-10-18 22:35:11,866 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,866 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gurmukhi' (AdobeGurmukhi-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,867 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2020-10-18 22:35:11,867 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,867 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,867 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Mincho' (MS Mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,867 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,867 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (MS Reference Specialty.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,867 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,867 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,867 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Thin.otf) normal normal 200 normal>) = 10.24
2020-10-18 22:35:11,868 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,868 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,868 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,868 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,868 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,868 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLightIt.otf) italic normal 200 normal>) = 11.24
2020-10-18 22:35:11,868 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,868 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,869 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuppy TC' (YuppyTC-Regular.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,869 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-18 22:35:11,869 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,869 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,869 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,869 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,869 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,869 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,869 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,869 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GungSeo' (Gungseouche.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal 408 condensed>) = 10.2576
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,870 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,871 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,871 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,871 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,871 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,871 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,871 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,871 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,872 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,872 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,872 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,872 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2020-10-18 22:35:11,872 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,872 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,872 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,872 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,872 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
2020-10-18 22:35:11,872 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,873 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,873 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,873 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,873 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,873 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,873 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,874 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Osaka' (OsakaMono.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,874 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,874 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,874 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,874 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,874 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,874 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU' (MingLiU.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,874 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal 303 condensed>) = 10.34215
2020-10-18 22:35:11,875 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2020-10-18 22:35:11,875 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 4.6863636363636365
2020-10-18 22:35:11,875 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Brush Script' (NanumScript.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,875 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,875 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple LiSung' (Apple LiSung Light.ttf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,875 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,875 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trajan Pro 3' (TrajanPro3-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,876 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,876 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:11,876 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria Math' (Cambria Math.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,876 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hannotate SC' (Hannotate.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,876 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (MS Reference Sans Serif.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,877 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Osaka' (Osaka.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,877 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,877 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal 707 condensed>) = 10.541649999999999
2020-10-18 22:35:11,877 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU_HKSCS-ExtB' (MingLiU_HKSCS-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,877 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,877 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,877 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal 643 condensed>) = 10.480849999999998
2020-10-18 22:35:11,877 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,878 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Ultralight.otf) normal normal 100 normal>) = 10.335
2020-10-18 22:35:11,878 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 6.698636363636363
2020-10-18 22:35:11,878 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 3.9713636363636367
2020-10-18 22:35:11,878 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,878 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (Marlett.ttf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,878 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Ultralight.otf) normal normal 100 normal>) = 10.335
2020-10-18 22:35:11,878 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (Lucida Console.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,878 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,878 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans CNS' (Hiragino Sans CNS.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,879 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,879 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,879 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Libian SC' (Libian.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,879 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,879 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Batang' (Batang.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,879 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,879 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-LightItalic.otf) italic normal 300 normal>) = 11.145
2020-10-18 22:35:11,879 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,879 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,879 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,880 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,880 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,880 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,880 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal 710 condensed>) = 10.5445
2020-10-18 22:35:11,880 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,880 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,880 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU_HKSCS' (mingliu_hkscs.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,880 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,880 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (Franklin Gothic Book.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,880 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,881 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LingWai SC' (LingWaiSC-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,881 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,881 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,881 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,881 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (SimSun.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,881 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (Franklin Gothic Medium.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,881 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Weibei TC' (WeibeiTC-Bold.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,881 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,881 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,882 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Xingkai SC' (Xingkai.ttc) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,882 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (Franklin Gothic Book Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,882 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2020-10-18 22:35:11,882 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2020-10-18 22:35:11,882 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gulim' (Gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,882 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,882 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,882 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuKyokasho Yoko' (Kyokasho.ttc) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,882 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2020-10-18 22:35:11,882 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,883 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple LiGothic' (Apple LiGothic Medium.ttf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,883 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,883 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-18 22:35:11,883 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 22:35:11,883 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,883 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 22:35:11,883 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,884 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,884 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Gothic' (ToppanBunkyuGothic.ttc) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,884 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HanziPen SC' (Hanzipen.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,884 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,884 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,884 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,884 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 22:35:11,884 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,885 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 22:35:11,886 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-18 22:35:11,886 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,887 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,887 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
2020-10-18 22:35:11,887 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,887 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,887 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,887 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,887 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,887 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,888 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS PGothic' (MS PGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,889 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 22:35:11,889 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,889 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Black.otf) normal normal 900 normal>) = 10.525
2020-10-18 22:35:11,889 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trajan Pro 3' (TrajanPro3-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,889 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 3.6863636363636365
2020-10-18 22:35:11,889 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,889 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2020-10-18 22:35:11,889 [82247] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to DejaVu Sans ('/Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf') with score of 0.050000.
2020-10-18 22:36:10,639 [82247] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x17dc03e50>
2020-10-18 22:36:10,639 [82247] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x17dc03e50> on colorbar
2020-10-18 22:36:10,640 [82247] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
2020-10-18 22:47:12,944 [82247] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x18284e790>
2020-10-18 22:47:12,952 [82247] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x18284e790> on colorbar
2020-10-18 22:47:12,952 [82247] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
2020-10-18 23:53:41,022 [82247] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-18 23:53:41,034 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,034 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,034 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,034 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,035 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,035 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,035 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,035 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2020-10-18 23:53:41,035 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-10-18 23:53:41,035 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,036 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,036 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,036 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,036 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,036 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,036 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,036 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,036 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,036 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,037 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,037 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,037 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,037 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,037 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,037 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2020-10-18 23:53:41,037 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2020-10-18 23:53:41,037 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,037 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2020-10-18 23:53:41,038 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,038 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,038 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,038 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,038 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,038 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,038 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,038 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,038 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,039 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-18 23:53:41,039 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,040 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,040 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,040 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,040 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,040 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,040 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,040 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,041 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,041 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tsukushi A Round Gothic' (TsukushiAMaruGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,041 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,041 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,041 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Mincho' (ToppanBunkyuMincho-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,041 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,041 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,041 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,041 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,041 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,042 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,042 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,042 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,042 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,042 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,042 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2020-10-18 23:53:41,042 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,043 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,043 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,044 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,044 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,044 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,044 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,045 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,045 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,045 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'BiauKai' (BiauKai.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,045 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,045 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PMingLiU-ExtB' (PMingLiU-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,046 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,046 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,046 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,046 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,047 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuanti SC' (Yuanti.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,047 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gurmukhi' (AdobeGurmukhi-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,047 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibril.ttf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,047 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,047 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,047 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 1.05
2020-10-18 23:53:41,047 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,048 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,048 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,048 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-RegularItalic.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,048 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,048 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,048 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal 580 condensed>) = 10.421
2020-10-18 23:53:41,048 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,049 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-18 23:53:41,049 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,049 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
2020-10-18 23:53:41,049 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Gothic' (NanumGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,049 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,049 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,049 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,049 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Black.otf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Midashi Mincho' (ToppanBunkyuMidashiMincho-ExtraBold.otf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal 394 condensed>) = 10.2557
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuGothic' (Yu Gothic Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,050 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (Franklin Gothic Medium Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kaiti SC' (Kaiti.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,051 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lantinghei SC' (Lantinghei.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLight.otf) normal normal 200 normal>) = 10.24
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimHei' (SimHei.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,052 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN W3.ttc) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,053 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,053 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,053 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,053 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,053 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,053 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STHeiti' (华文细黑.ttf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,053 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,053 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 1.335
2020-10-18 23:53:41,053 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,054 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,054 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,054 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,054 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,054 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tsukushi B Round Gothic' (TsukushiBMaruGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,054 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,054 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,054 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,055 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PilGi' (Pilgiche.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,055 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,055 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-18 23:53:41,055 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 434 condensed>) = 10.2823
2020-10-18 23:53:41,055 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-18 23:53:41,055 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-HeavyItalic.otf) italic normal 800 normal>) = 11.43
2020-10-18 23:53:41,055 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,055 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,056 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,056 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-18 23:53:41,056 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,056 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 0.05
2020-10-18 23:53:41,056 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,056 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,056 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS PMincho' (MS PMincho.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,057 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,057 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,057 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,057 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,057 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,057 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,057 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,057 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,058 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,058 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,058 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,058 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,058 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,058 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,058 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,058 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,058 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wawati TC' (WawaTC-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,058 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,059 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 1.335
2020-10-18 23:53:41,059 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,059 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,059 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB W3.ttc) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,059 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,059 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-18 23:53:41,060 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,060 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,060 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Myeongjo' (NanumMyeongjo.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,060 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
2020-10-18 23:53:41,060 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BlackIt.otf) italic normal 900 normal>) = 11.525
2020-10-18 23:53:41,060 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,061 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,061 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baoli SC' (Baoli.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,061 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,061 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,061 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Weibei SC' (WeibeiSC-Bold.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,061 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (Lucida Sans Unicode.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,061 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
2020-10-18 23:53:41,061 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (SimSun-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,062 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,062 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,062 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,062 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,062 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STFangsong' (华文仿宋.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,062 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuGothic' (Yu Gothic Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,062 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,062 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,062 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,063 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
2020-10-18 23:53:41,063 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,063 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,063 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,063 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal 504 condensed>) = 10.348799999999999
2020-10-18 23:53:41,063 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,063 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,064 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,064 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,064 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wawati SC' (WawaSC-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,064 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,064 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-LightIt.otf) italic normal 300 normal>) = 11.145
2020-10-18 23:53:41,064 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,066 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,066 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,067 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,067 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hei' (Hei.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,067 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,067 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,067 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PMingLiU' (PMingLiU.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,067 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STHeiti' (华文黑体.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,067 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,068 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,068 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,068 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal 835 condensed>) = 10.66325
2020-10-18 23:53:41,068 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,068 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,068 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (TaiLeb.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,068 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,069 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HeadLineA' (HeadlineA.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,069 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-18 23:53:41,069 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB W6.ttc) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,069 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,069 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,069 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,069 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,069 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,069 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,070 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,070 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,070 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,070 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,070 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,070 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 1.05
2020-10-18 23:53:41,070 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,070 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,070 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-18 23:53:41,071 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,071 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PCMyungjo' (PCmyoungjo.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,071 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,071 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,071 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-18 23:53:41,071 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,071 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,071 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,072 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,072 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,072 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,072 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,072 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,072 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,072 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,072 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,072 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,073 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LingWai TC' (LingWaiTC-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,073 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,073 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSTextItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,073 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LiSong Pro' (儷宋 Pro.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,073 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,073 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,073 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,073 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,073 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,073 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,074 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Midashi Gothic' (ToppanBunkyuMidashiGothic-ExtraBold.otf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,074 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,075 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,075 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LiHei Pro' (儷黑 Pro.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,075 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,075 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,076 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,076 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-18 23:53:41,076 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,076 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,076 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,077 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,077 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kai' (Kai.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,077 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Thin.otf) normal normal 200 normal>) = 10.24
2020-10-18 23:53:41,077 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuppy SC' (YuppySC-Regular.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,077 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal 900 condensed>) = 10.725
2020-10-18 23:53:41,077 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,077 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,077 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,077 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,078 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,078 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,078 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,078 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,078 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-18 23:53:41,078 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2020-10-18 23:53:41,078 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (Bookshelf Symbol 7.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,078 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,078 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,079 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (MingLiU-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,079 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,079 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,079 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,079 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,079 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,079 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-18 23:53:41,079 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal 607 condensed>) = 10.44665
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Klee' (Klee.ttc) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal 512 condensed>) = 10.356399999999999
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Black.otf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer11' (TeamViewer11.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,080 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 0.05
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,081 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,082 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,082 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,082 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,082 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,082 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,083 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2020-10-18 23:53:41,083 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,083 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,083 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,083 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,083 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,083 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,083 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,084 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,084 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,084 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (MS Gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,084 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,084 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,084 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuMincho' (YuMincho.ttc) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,084 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,084 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,085 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,085 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,085 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,085 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,085 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,085 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,085 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,085 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal 798 condensed>) = 10.6281
2020-10-18 23:53:41,086 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,086 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN W6.ttc) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,086 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,086 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,086 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,086 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,087 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
2020-10-18 23:53:41,087 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,087 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-18 23:53:41,087 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSText.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,087 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,087 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,087 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,087 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal 775 condensed>) = 10.60625
2020-10-18 23:53:41,088 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,088 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,088 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,088 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-MediumItalic.otf) italic normal 500 normal>) = 11.145
2020-10-18 23:53:41,088 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,088 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2020-10-18 23:53:41,089 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,089 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gurmukhi' (AdobeGurmukhi-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,089 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2020-10-18 23:53:41,089 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,089 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,089 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Mincho' (MS Mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,089 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,089 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (MS Reference Specialty.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,090 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,090 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,090 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Thin.otf) normal normal 200 normal>) = 10.24
2020-10-18 23:53:41,090 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,090 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,090 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,090 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,090 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,091 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLightIt.otf) italic normal 200 normal>) = 11.24
2020-10-18 23:53:41,091 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,091 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,091 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuppy TC' (YuppyTC-Regular.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,091 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-18 23:53:41,091 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,091 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,091 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,091 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GungSeo' (Gungseouche.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,092 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,093 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal 408 condensed>) = 10.2576
2020-10-18 23:53:41,093 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,093 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,093 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,093 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,093 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,093 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,093 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,093 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,094 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,094 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,094 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,094 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,094 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,094 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2020-10-18 23:53:41,095 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,095 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,095 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,095 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,095 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
2020-10-18 23:53:41,095 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,095 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,096 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,096 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,096 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,096 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,096 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,096 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Osaka' (OsakaMono.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,096 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,096 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,096 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,097 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,097 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,097 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU' (MingLiU.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,097 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal 303 condensed>) = 10.34215
2020-10-18 23:53:41,097 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2020-10-18 23:53:41,097 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,097 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Brush Script' (NanumScript.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,097 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,098 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple LiSung' (Apple LiSung Light.ttf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,098 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,098 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trajan Pro 3' (TrajanPro3-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,098 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,098 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-18 23:53:41,099 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria Math' (Cambria Math.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,099 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hannotate SC' (Hannotate.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,099 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (MS Reference Sans Serif.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,100 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Osaka' (Osaka.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,100 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,100 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal 707 condensed>) = 10.541649999999999
2020-10-18 23:53:41,100 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU_HKSCS-ExtB' (MingLiU_HKSCS-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,100 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,100 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,100 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal 643 condensed>) = 10.480849999999998
2020-10-18 23:53:41,100 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,100 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Ultralight.otf) normal normal 100 normal>) = 10.335
2020-10-18 23:53:41,100 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-10-18 23:53:41,101 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,101 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,101 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (Marlett.ttf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,101 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Ultralight.otf) normal normal 100 normal>) = 10.335
2020-10-18 23:53:41,101 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (Lucida Console.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,101 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,101 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans CNS' (Hiragino Sans CNS.ttc) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Libian SC' (Libian.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Batang' (Batang.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-LightItalic.otf) italic normal 300 normal>) = 11.145
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,102 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,103 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,103 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,103 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal 710 condensed>) = 10.5445
2020-10-18 23:53:41,103 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,103 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,103 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU_HKSCS' (mingliu_hkscs.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,103 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,103 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (Franklin Gothic Book.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,103 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,103 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LingWai SC' (LingWaiSC-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,104 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,104 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,104 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,104 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (SimSun.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,104 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (Franklin Gothic Medium.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,104 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Weibei TC' (WeibeiTC-Bold.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,104 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,104 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,104 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Xingkai SC' (Xingkai.ttc) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,104 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (Franklin Gothic Book Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,105 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2020-10-18 23:53:41,105 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2020-10-18 23:53:41,105 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gulim' (Gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,105 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,105 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,105 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuKyokasho Yoko' (Kyokasho.ttc) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,108 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2020-10-18 23:53:41,109 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,109 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple LiGothic' (Apple LiGothic Medium.ttf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,109 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,110 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-18 23:53:41,110 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-18 23:53:41,110 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,110 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-18 23:53:41,110 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,110 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,110 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Gothic' (ToppanBunkyuGothic.ttc) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,111 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HanziPen SC' (Hanzipen.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,111 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,111 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,111 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,111 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-18 23:53:41,111 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,112 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-18 23:53:41,112 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-18 23:53:41,112 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,112 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,112 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
2020-10-18 23:53:41,112 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,113 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,113 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,113 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,113 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,113 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,113 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,113 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,114 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
2020-10-18 23:53:41,114 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,114 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,114 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,114 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,114 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,114 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-18 23:53:41,114 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,114 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS PGothic' (MS PGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,114 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-18 23:53:41,115 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,115 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Black.otf) normal normal 900 normal>) = 10.525
2020-10-18 23:53:41,115 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trajan Pro 3' (TrajanPro3-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,115 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,115 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,115 [82247] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2020-10-18 23:53:41,115 [82247] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to Arial ('/Library/Fonts/Arial.ttf') with score of 0.050000.
2020-10-19 11:10:28,503 [82247] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-19 11:10:28,507 [82247] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-19 11:10:28,511 [82247] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-19 11:10:28,531 [82247] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-19 11:10:28,534 [82247] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-19 11:10:28,536 [82247] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-19 13:51:01,396 [82247] WARNING  py.warnings:110: [JupyterRequire] /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3072: DtypeWarning: Columns (5) have mixed types.Specify dtype option on import or set low_memory=False.
  interactivity=interactivity, compiler=compiler, result=result)

2020-10-20 13:14:44,864 [82247] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-20 13:14:44,875 [82247] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-20 13:14:44,875 [82247] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-20 13:14:44,901 [82247] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-20 13:14:44,905 [82247] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-20 13:14:44,905 [82247] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-20 17:02:43,200 [57789] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-20 17:02:43,200 [57789] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-20 17:02:43,201 [57789] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-20 17:02:43,204 [57789] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-20 17:02:43,205 [57789] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-20 17:02:43,205 [57789] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-20 17:02:49,919 [57789] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-20 17:02:49,920 [57789] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-20 17:02:49,928 [57789] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=/Users/macbookpro/.matplotlib
2020-10-20 17:02:49,931 [57789] DEBUG    matplotlib:1464: [JupyterRequire] matplotlib version 3.3.0
2020-10-20 17:02:49,931 [57789] DEBUG    matplotlib:1465: [JupyterRequire] interactive is False
2020-10-20 17:02:49,931 [57789] DEBUG    matplotlib:1466: [JupyterRequire] platform is darwin
2020-10-20 17:02:49,931 [57789] DEBUG    matplotlib:1467: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_darwin_darwin', '_osx_support', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'distutils.sysconfig', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', '_uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_19', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_20', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2020-10-20 17:02:49,999 [57789] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=/Users/macbookpro/.matplotlib
2020-10-20 17:02:50,006 [57789] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from /Users/macbookpro/.matplotlib/fontlist-v330.json
2020-10-20 17:02:50,273 [57789] DEBUG    matplotlib.pyplot:273: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-20 17:02:50,280 [57789] DEBUG    matplotlib.pyplot:273: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-20 20:15:40,689 [57789] WARNING  py.warnings:110: [JupyterRequire] /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3072: DtypeWarning: Columns (5) have mixed types.Specify dtype option on import or set low_memory=False.
  interactivity=interactivity, compiler=compiler, result=result)

2020-10-20 20:26:38,618 [57789] DEBUG    tensorflow:35: [JupyterRequire] Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
2020-10-20 20:36:29,656 [57789] WARNING  py.warnings:110: [JupyterRequire] /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/IPython/core/interactiveshell.py:3072: DtypeWarning: Columns (5) have mixed types.Specify dtype option on import or set low_memory=False.
  interactivity=interactivity, compiler=compiler, result=result)

2020-10-20 20:49:10,111 [57789] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2020-10-20 20:49:10,134 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,134 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,134 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,135 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,135 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,135 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,135 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,135 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2020-10-20 20:49:10,135 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-10-20 20:49:10,136 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,136 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,136 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,136 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,136 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,136 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,136 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,136 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,136 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,136 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,137 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,137 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,137 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,137 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,137 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,137 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2020-10-20 20:49:10,137 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2020-10-20 20:49:10,137 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,137 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2020-10-20 20:49:10,138 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,138 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,138 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,138 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,138 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,138 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,138 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,138 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,138 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,138 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-20 20:49:10,139 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,139 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,139 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,139 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,139 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,139 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,139 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,139 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,139 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,139 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tsukushi A Round Gothic' (TsukushiAMaruGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,140 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,140 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,140 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Mincho' (ToppanBunkyuMincho-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,140 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,140 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,140 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,140 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,140 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,140 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,140 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,141 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,141 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,141 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,141 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2020-10-20 20:49:10,141 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,141 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,141 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,141 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,141 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,142 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,142 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,142 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,142 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,142 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'BiauKai' (BiauKai.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,142 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,142 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PMingLiU-ExtB' (PMingLiU-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,142 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,142 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,143 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,143 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,143 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuanti SC' (Yuanti.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,143 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gurmukhi' (AdobeGurmukhi-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,143 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibril.ttf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,143 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,144 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,144 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 1.05
2020-10-20 20:49:10,144 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,144 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,145 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,145 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-RegularItalic.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,145 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,145 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,145 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal 580 condensed>) = 10.421
2020-10-20 20:49:10,146 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,146 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-20 20:49:10,146 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,146 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
2020-10-20 20:49:10,146 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Gothic' (NanumGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,146 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,146 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,146 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,146 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-20 20:49:10,147 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Black.otf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,147 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,147 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,147 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Midashi Mincho' (ToppanBunkyuMidashiMincho-ExtraBold.otf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,147 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal 394 condensed>) = 10.2557
2020-10-20 20:49:10,147 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuGothic' (Yu Gothic Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,147 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,147 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,147 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,148 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,148 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,148 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,148 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,148 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,148 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (Franklin Gothic Medium Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,148 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kaiti SC' (Kaiti.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,148 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,148 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,148 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,149 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,149 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,149 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,149 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,149 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,149 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,149 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,149 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,149 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lantinghei SC' (Lantinghei.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,149 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,150 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,150 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,150 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLight.otf) normal normal 200 normal>) = 10.24
2020-10-20 20:49:10,150 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimHei' (SimHei.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,150 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN W3.ttc) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,150 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,150 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,150 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,152 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,152 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,152 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STHeiti' (华文细黑.ttf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,152 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,153 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 1.335
2020-10-20 20:49:10,153 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,153 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,153 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,153 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,153 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,153 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tsukushi B Round Gothic' (TsukushiBMaruGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,153 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,153 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,153 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,154 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PilGi' (Pilgiche.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,154 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,154 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-20 20:49:10,154 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 434 condensed>) = 10.2823
2020-10-20 20:49:10,154 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-20 20:49:10,154 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-HeavyItalic.otf) italic normal 800 normal>) = 11.43
2020-10-20 20:49:10,154 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,154 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,154 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,154 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-20 20:49:10,155 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,155 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 0.05
2020-10-20 20:49:10,155 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,155 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,155 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS PMincho' (MS PMincho.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,155 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,155 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,155 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,155 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,155 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,156 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,156 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,156 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,156 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,156 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,157 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,158 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,158 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,158 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,158 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,158 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,158 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wawati TC' (WawaTC-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,158 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,158 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 1.335
2020-10-20 20:49:10,158 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB W3.ttc) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Myeongjo' (NanumMyeongjo.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BlackIt.otf) italic normal 900 normal>) = 11.525
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,159 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,160 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baoli SC' (Baoli.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,160 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,160 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,160 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Weibei SC' (WeibeiSC-Bold.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,160 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (Lucida Sans Unicode.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,160 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
2020-10-20 20:49:10,161 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (SimSun-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,161 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,161 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,161 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,161 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,161 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STFangsong' (华文仿宋.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,162 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuGothic' (Yu Gothic Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,162 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,162 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,162 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,162 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
2020-10-20 20:49:10,162 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal 504 condensed>) = 10.348799999999999
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wawati SC' (WawaSC-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-LightIt.otf) italic normal 300 normal>) = 11.145
2020-10-20 20:49:10,163 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hei' (Hei.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PMingLiU' (PMingLiU.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STHeiti' (华文黑体.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,164 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal 835 condensed>) = 10.66325
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (TaiLeb.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HeadLineA' (HeadlineA.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB W6.ttc) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,165 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 1.05
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,166 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-20 20:49:10,167 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,167 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PCMyungjo' (PCmyoungjo.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,167 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,167 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,167 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-20 20:49:10,167 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,167 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,167 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,167 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,167 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,168 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,168 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,168 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,168 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,168 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,168 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,168 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,168 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LingWai TC' (LingWaiTC-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,168 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,168 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSTextItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LiSong Pro' (儷宋 Pro.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Midashi Gothic' (ToppanBunkyuMidashiGothic-ExtraBold.otf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,169 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LiHei Pro' (儷黑 Pro.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,170 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,170 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,170 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,170 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-20 20:49:10,170 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,170 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,170 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,170 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,170 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kai' (Kai.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,170 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Thin.otf) normal normal 200 normal>) = 10.24
2020-10-20 20:49:10,171 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuppy SC' (YuppySC-Regular.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,171 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal 900 condensed>) = 10.725
2020-10-20 20:49:10,171 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,171 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,171 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,171 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,171 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,171 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,172 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,172 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,172 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-20 20:49:10,172 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2020-10-20 20:49:10,172 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (Bookshelf Symbol 7.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,172 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,172 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,172 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (MingLiU-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,172 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,172 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,173 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,173 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,173 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,173 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-20 20:49:10,173 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal 607 condensed>) = 10.44665
2020-10-20 20:49:10,173 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,173 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,173 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Klee' (Klee.ttc) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,173 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,174 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,174 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,174 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal 512 condensed>) = 10.356399999999999
2020-10-20 20:49:10,174 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Black.otf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,174 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer11' (TeamViewer11.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,174 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,174 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,174 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-10-20 20:49:10,174 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 0.05
2020-10-20 20:49:10,174 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,175 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,175 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,175 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,175 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,175 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
2020-10-20 20:49:10,175 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,175 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,175 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,175 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,175 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,176 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,176 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,176 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,176 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2020-10-20 20:49:10,176 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,176 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,177 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,177 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,177 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,177 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,177 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,177 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,178 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,178 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (MS Gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,178 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,178 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,178 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuMincho' (YuMincho.ttc) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,178 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,178 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,178 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,178 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,179 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,179 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,179 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,179 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,179 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,180 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal 798 condensed>) = 10.6281
2020-10-20 20:49:10,180 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,180 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN W6.ttc) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,180 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,180 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,180 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,180 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,180 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
2020-10-20 20:49:10,180 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSText.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal 775 condensed>) = 10.60625
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-MediumItalic.otf) italic normal 500 normal>) = 11.145
2020-10-20 20:49:10,181 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gurmukhi' (AdobeGurmukhi-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Mincho' (MS Mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (MS Reference Specialty.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,182 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Thin.otf) normal normal 200 normal>) = 10.24
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLightIt.otf) italic normal 200 normal>) = 11.24
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuppy TC' (YuppyTC-Regular.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-20 20:49:10,183 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GungSeo' (Gungseouche.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,184 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal 408 condensed>) = 10.2576
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,185 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,186 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Osaka' (OsakaMono.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,187 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU' (MingLiU.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal 303 condensed>) = 10.34215
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Brush Script' (NanumScript.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple LiSung' (Apple LiSung Light.ttf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trajan Pro 3' (TrajanPro3-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,188 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,189 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-20 20:49:10,189 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria Math' (Cambria Math.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,189 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hannotate SC' (Hannotate.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,189 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (MS Reference Sans Serif.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,189 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Osaka' (Osaka.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,189 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,189 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal 707 condensed>) = 10.541649999999999
2020-10-20 20:49:10,189 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU_HKSCS-ExtB' (MingLiU_HKSCS-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal 643 condensed>) = 10.480849999999998
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Ultralight.otf) normal normal 100 normal>) = 10.335
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (Marlett.ttf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Ultralight.otf) normal normal 100 normal>) = 10.335
2020-10-20 20:49:10,190 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (Lucida Console.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans CNS' (Hiragino Sans CNS.ttc) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Libian SC' (Libian.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Batang' (Batang.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-LightItalic.otf) italic normal 300 normal>) = 11.145
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,191 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal 710 condensed>) = 10.5445
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU_HKSCS' (mingliu_hkscs.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (Franklin Gothic Book.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,192 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,193 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LingWai SC' (LingWaiSC-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,193 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,193 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,193 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,193 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (SimSun.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,193 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (Franklin Gothic Medium.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,193 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Weibei TC' (WeibeiTC-Bold.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,194 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,194 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,194 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Xingkai SC' (Xingkai.ttc) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,194 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (Franklin Gothic Book Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,194 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2020-10-20 20:49:10,194 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2020-10-20 20:49:10,195 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gulim' (Gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,195 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,195 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,195 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuKyokasho Yoko' (Kyokasho.ttc) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,196 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2020-10-20 20:49:10,196 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,196 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple LiGothic' (Apple LiGothic Medium.ttf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,196 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,196 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-20 20:49:10,196 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 20:49:10,196 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,196 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Gothic' (ToppanBunkyuGothic.ttc) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HanziPen SC' (Hanzipen.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 20:49:10,197 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,198 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS PGothic' (MS PGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,199 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Black.otf) normal normal 900 normal>) = 10.525
2020-10-20 20:49:10,200 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trajan Pro 3' (TrajanPro3-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,200 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,200 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,200 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2020-10-20 20:49:10,200 [57789] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to Arial ('/Library/Fonts/Arial.ttf') with score of 0.050000.
2020-10-20 21:03:48,677 [57789] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x143086f50>
2020-10-20 21:03:48,679 [57789] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x143086f50> on colorbar
2020-10-20 21:03:48,679 [57789] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
2020-10-20 21:03:48,967 [57789] DEBUG    matplotlib.font_manager:1334: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0.
2020-10-20 21:03:48,967 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,967 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmr10' (cmr10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,968 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,968 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,968 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,968 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,968 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmtt10' (cmtt10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,968 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans.ttf) normal normal 400 normal>) = 2.05
2020-10-20 21:03:48,968 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-BoldOblique.ttf) oblique normal 700 normal>) = 11.335
2020-10-20 21:03:48,968 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,968 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmsy10' (cmsy10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif Display' (DejaVuSerifDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-BoldItalic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmex10' (cmex10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,969 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmmi10' (cmmi10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,970 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,970 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Display' (DejaVuSansDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,970 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Oblique.ttf) oblique normal 400 normal>) = 3.05
2020-10-20 21:03:48,970 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-BoldOblique.ttf) oblique normal 700 normal>) = 3.335
2020-10-20 21:03:48,970 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,970 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans' (DejaVuSans-Bold.ttf) normal normal 700 normal>) = 2.335
2020-10-20 21:03:48,970 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,970 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,970 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Serif' (DejaVuSerif-Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,971 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,971 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,971 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmss10' (cmss10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,971 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,971 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'cmb10' (cmb10.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,971 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,971 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DejaVu Sans Mono' (DejaVuSansMono-Oblique.ttf) oblique normal 400 normal>) = 11.05
2020-10-20 21:03:48,972 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,972 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,972 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer Sangam MN' (Khmer Sangam MN.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,972 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:48,972 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,973 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,973 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Krungthep' (Krungthep.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,973 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniIta.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,973 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,973 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tsukushi A Round Gothic' (TsukushiAMaruGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,973 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,974 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,974 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Mincho' (ToppanBunkyuMincho-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,974 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Snell Roundhand' (SnellRoundhand.ttc) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,974 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'New Peninim MT' (NewPeninimMT.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,974 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,974 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W9.ttc) normal normal 900 normal>) = 10.525
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 8 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script Std' (BrushScriptStd.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next Condensed' (Avenir Next Condensed.ttc) normal normal 700 condensed>) = 10.535
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Helvetica Neue DeskInterface' (HelveticaNeueDeskInterface.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W2.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kokonor' (Kokonor.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,975 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Smallcaps' (Bodoni 72 Smallcaps Book.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple SD Gothic Neo' (AppleSDGothicNeo.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneral.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari Sangam MN' (Devanagari Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'BiauKai' (BiauKai.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralItalic.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PMingLiU-ExtB' (PMingLiU-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleMyungjo' (AppleMyungjo.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nadeem' (Nadeem.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,976 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Thonburi' (Thonburi.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Futura' (Futura.ttc) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuanti SC' (Yuanti.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gurmukhi' (AdobeGurmukhi-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibril.ttf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Savoye LET' (Savoye LET.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam MN' (Malayalam MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 1.05
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Phosphate' (Phosphate.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi Gold' (Mishafi Gold.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,977 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-RegularItalic.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sathu' (Sathu.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Grande' (LucidaGrande.ttc) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Regular.otf) normal normal 580 condensed>) = 10.421
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard' (Chalkboard.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-LightIt.otf) italic normal 300 normal>) = 11.145
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Gothic' (NanumGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Euphemia UCAS' (EuphemiaCAS.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,978 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Black.otf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Midashi Mincho' (ToppanBunkyuMidashiMincho-ExtraBold.otf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Ultralight.otf) normal normal 394 condensed>) = 10.2557
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuGothic' (Yu Gothic Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVarBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,979 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W6.ttc) normal normal 600 normal>) = 10.24
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Malayalam Sangam MN' (Malayalam Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (Franklin Gothic Medium Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kaiti SC' (Kaiti.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya Sangam MN' (Oriya Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.LastResort' (LastResort.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lithos Pro' (LithosPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,980 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu MN' (Telugu MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir' (Avenir.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFiveSym' (STIXSizFiveSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lantinghei SC' (Lantinghei.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Black' (Arial Black.ttf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLight.otf) normal normal 200 normal>) = 10.24
2020-10-20 21:03:48,981 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimHei' (SimHei.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,982 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN W3.ttc) normal normal 300 normal>) = 10.145
2020-10-20 21:03:48,982 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil Sangam MN' (Tamil Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,982 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBolIta.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,982 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Poplar Std' (PoplarStd.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,982 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Song Std' (AdobeSongStd-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:48,982 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gabriola' (Gabriola.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,982 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STHeiti' (华文细黑.ttf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Birch Std' (BirchStd.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 1.335
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUniBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Iowan Old Style' (Iowan Old Style.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W3.ttc) normal normal 300 normal>) = 10.145
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tsukushi B Round Gothic' (TsukushiBMaruGothic.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,983 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PilGi' (Pilgiche.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Thin.otf) normal normal 434 condensed>) = 10.2823
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Condensed' (DIN Condensed Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-HeavyItalic.otf) italic normal 800 normal>) = 11.43
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-It.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Herculanum' (Herculanum.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,984 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 0.05
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Kaiti Std' (AdobeKaitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS PMincho' (MS PMincho.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text Ornaments.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Fan Heiti Std' (AdobeFanHeitiStd-Bold.otf) normal normal 600 normal>) = 10.24
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Hebrew' (ArialHB.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,985 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Plantagenet Cherokee' (PlantagenetCherokee.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'American Typewriter' (AmericanTypewriter.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Optima' (Optima.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla Sangam MN' (Bangla Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Oriya MN' (Oriya MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wawati TC' (WawaTC-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'AppleGothic' (AppleGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,986 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold Italic.ttf) italic normal 700 normal>) = 1.335
2020-10-20 21:03:48,987 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,987 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,987 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB W3.ttc) normal normal 300 normal>) = 10.145
2020-10-20 21:03:48,987 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:48,987 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-SemiboldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-20 21:03:48,987 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,987 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,987 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Myeongjo' (NanumMyeongjo.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,987 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldCnIt.otf) italic normal 700 condensed>) = 11.535
2020-10-20 21:03:48,988 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-BlackIt.otf) italic normal 900 normal>) = 11.525
2020-10-20 21:03:48,988 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino' (Palatino.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,988 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Songti SC' (Songti.ttc) normal normal 900 normal>) = 10.525
2020-10-20 21:03:48,988 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baoli SC' (Baoli.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,988 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,988 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Webdings' (Webdings.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,989 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Weibei SC' (WeibeiSC-Bold.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,989 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Sans Unicode' (Lucida Sans Unicode.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,989 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lithos Pro' (LithosPro-Black.otf) normal normal 850 normal>) = 10.4775
2020-10-20 21:03:48,989 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun-ExtB' (SimSun-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,989 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Orator Std' (OratorStd.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,989 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,990 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,990 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeFourSym' (STIXSizFourSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,990 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STFangsong' (华文仿宋.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,990 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuGothic' (Yu Gothic Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,991 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W4.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,991 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao MN' (Lao MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:48,991 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar Sangam MN' (Myanmar Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,991 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldObl.otf) oblique normal 700 normal>) = 11.335
2020-10-20 21:03:48,991 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,991 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,991 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mshtakan' (Mshtakan.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,991 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Medium.otf) normal normal 504 condensed>) = 10.348799999999999
2020-10-20 21:03:48,991 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DecoType Naskh' (DecoTypeNaskh.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,991 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Slanted.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Shree Devanagari 714' (Shree714.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wawati SC' (WawaSC-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Blackoak Std' (BlackoakStd.otf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-LightIt.otf) italic normal 300 normal>) = 11.145
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Maru Gothic Pro' (ヒラギノ丸ゴ ProN W4.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Georgia' (Georgia Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hei' (Hei.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkboard SE' (ChalkboardSE.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,992 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXVariants' (STIXVar.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PMingLiU' (PMingLiU.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STHeiti' (华文黑体.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni Ornaments' (Bodoni Ornaments.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baghdad' (Baghdad.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'OCR A Std' (OCRAStd.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Heavy.otf) normal normal 835 condensed>) = 10.66325
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpSm' (STIXIntUpSmBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Luminari' (Luminari.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (TaiLeb.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SignPainter' (SignPainter.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,993 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HeadLineA' (HeadlineA.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,994 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-20 21:03:48,994 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans GB' (Hiragino Sans GB W6.ttc) normal normal 600 normal>) = 10.24
2020-10-20 21:03:48,994 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,994 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeOneSym' (STIXSizOneSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,994 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria' (Cambria Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,994 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Tarikh' (Al Tarikh.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,994 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Superclarendon' (SuperClarendon.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,994 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Thuluth' (Diwan Thuluth.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,994 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Yi Baiti' (msyi.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,994 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,995 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charlemagne Std' (CharlemagneStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,995 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,995 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,995 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Italic.ttf) italic normal 400 normal>) = 1.05
2020-10-20 21:03:48,995 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,995 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,995 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-20 21:03:48,995 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:48,995 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PCMyungjo' (PCmyoungjo.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,995 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 6 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72 Oldstyle' (Bodoni 72 OS.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'InaiMathi' (InaiMathi.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Devanagari' (Kohinoor.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gothic Std' (AdobeGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi Sangam MN' (Gurmukhi Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Athelas' (Athelas.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,996 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,997 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bangla MN' (Bangla MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,997 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,997 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Diwan Kufi' (Diwan Kufi.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,997 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LingWai TC' (LingWaiTC-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,997 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mongolian Baiti' (monbaiti.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,997 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSTextItalic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,997 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LiSong Pro' (儷宋 Pro.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,997 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MT' (Gurmukhi.ttf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,997 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,998 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,998 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cochin' (Cochin.ttc) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,998 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Pinpoint 6 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,998 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:48,998 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Midashi Gothic' (ToppanBunkyuMidashiGothic-ExtraBold.otf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:48,998 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Khmer MN' (Khmer MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:48,998 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-It.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,998 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LiHei Pro' (儷黑 Pro.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,998 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif' (PTSerif.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,998 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tw Cen MT' (Tw Cen MT Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Ayuthaya' (Ayuthaya.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nueva Std' (NuevaStd-Cond.otf) normal normal 400 condensed>) = 10.25
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Telugu' (KohinoorTelugu.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Braille' (Apple Braille Outline 8 Dot.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Muna' (Muna.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kai' (Kai.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Thin.otf) normal normal 200 normal>) = 10.24
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuppy SC' (YuppySC-Regular.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Black.otf) normal normal 900 condensed>) = 10.725
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:48,999 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sukhumvit Set' (SukhumvitSet.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'ITF Devanagari' (ITFDevanagari.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Serif Caption' (PTSerifCaption.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-BoldItalic.otf) italic normal 600 normal>) = 11.24
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Keyboard' (Keyboard.ttf) normal normal 100 normal>) = 10.335
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bookshelf Symbol 7' (Bookshelf Symbol 7.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala MN' (Sinhala MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,000 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU-ExtB' (MingLiU-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Waseem' (Waseem.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Sans Serif' (Microsoft Sans Serif.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marion' (Marion.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Semibold.otf) normal normal 607 condensed>) = 10.44665
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Big Caslon' (BigCaslon.ttf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Raanana' (Raanana.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Klee' (Klee.ttc) normal normal 600 normal>) = 10.24
2020-10-20 21:03:49,001 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tahoma' (Tahoma Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Light.otf) normal normal 512 condensed>) = 10.356399999999999
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Black.otf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'TeamViewer11' (TeamViewer11.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Comic Sans MS' (Comic Sans MS Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial.ttf) normal normal 400 normal>) = 0.05
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trebuchet MS' (Trebuchet MS Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,002 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapf Dingbats' (ZapfDingbats.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-CondIt.otf) italic normal 400 condensed>) = 11.25
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Bayan' (AlBayan.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Al Nile' (Al Nile.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Medium.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PingFang HK' (PingFang.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans' (GillSans.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,003 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,004 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W1.ttc) normal normal 200 normal>) = 10.24
2020-10-20 21:03:49,004 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lao Sangam MN' (Lao Sangam MN.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,004 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,004 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Heiti Std' (AdobeHeitiStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,004 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada Sangam MN' (Kannada Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,006 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bradley Hand' (Bradley Hand Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,007 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kohinoor Bangla' (KohinoorBangla.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,007 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Prestige Elite Std' (PrestigeEliteStd-Bd.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,007 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Symbol' (Symbol.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,007 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,007 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Gothic' (MS Gothic.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,007 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hoefler Text' (Hoefler Text.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuMincho' (YuMincho.ttc) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsSm' (STIXIntSmBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chaparral Pro' (ChaparralPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myanmar MN' (Myanmar MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sana' (Sana.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farisi' (Farisi.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 21:03:49,008 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Damascus' (Damascus.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Heavy.otf) normal normal 798 condensed>) = 10.6281
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Mincho ProN' (ヒラギノ明朝 ProN W6.ttc) normal normal 600 normal>) = 10.24
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeTwoSym' (STIXSizTwoSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Impact' (Impact.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Geeza Pro' (GeezaPro.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Meiryo' (Meiryo.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldCn.otf) normal normal 700 condensed>) = 10.535
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Italic.ttf) italic normal 400 condensed>) = 11.25
2020-10-20 21:03:49,009 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSText.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Unicode MS' (Arial Unicode.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Bold.otf) normal normal 775 condensed>) = 10.60625
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Beirut' (Beirut.ttc) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-MediumItalic.otf) italic normal 500 normal>) = 11.145
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Arabic' (MyriadArabic-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Chancery' (Apple Chancery.ttf) normal normal 0 normal>) = 10.43
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 21:03:49,010 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Gurmukhi' (AdobeGurmukhi-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow.ttf) normal normal 400 condensed>) = 10.25
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings' (Wingdings.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Mincho' (MS Mincho.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Specialty' (MS Reference Specialty.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Seravek' (Seravek.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Thin.otf) normal normal 200 normal>) = 10.24
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,011 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Menlo' (Menlo.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Candara' (Candara Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-ExtraLightIt.otf) italic normal 200 normal>) = 11.24
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.Aqua Kana' (AquaKana.ttc) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Yuppy TC' (YuppyTC-Regular.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Heavy.otf) normal normal 800 normal>) = 10.43
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Rounded MT Bold' (Arial Rounded Bold.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 21:03:49,012 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,013 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,013 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,013 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Himalaya' (himalaya.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,013 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,013 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marker Felt' (MarkerFelt.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,013 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Noteworthy' (Noteworthy.ttc) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,013 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'GungSeo' (Gungseouche.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,013 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tekton Pro' (TektonPro-BoldExt.otf) normal normal 700 expanded>) = 10.535
2020-10-20 21:03:49,013 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsD' (STIXIntDBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,013 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,014 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Mono' (PTMono.ttc) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,014 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Regular.otf) normal normal 408 condensed>) = 10.2576
2020-10-20 21:03:49,014 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Farah' (Farah.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,014 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,014 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-It.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,014 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,014 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,014 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Telugu Sangam MN' (Telugu Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,014 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Ming Std' (AdobeMingStd-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Naskh' (AdobeNaskh-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 2' (Wingdings 2.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corsiva Hebrew' (Corsiva.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'DIN Alternate' (DIN Alternate Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Devanagari MT' (DevanagariMT.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W8.ttc) normal normal 800 normal>) = 10.43
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'PT Sans' (PTSans.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple Symbols' (Apple Symbols.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Tamil MN' (Tamil MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:49,015 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-MediumIt.otf) italic normal 500 normal>) = 11.145
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hobo Std' (HoboStd.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUp' (STIXIntUpBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gurmukhi MN' (Gurmukhi MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'System Font' (SFNSDisplay.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Osaka' (OsakaMono.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kailasa' (Kailasa.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,016 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Wingdings 3' (Wingdings 3.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXIntegralsUpD' (STIXIntUpDBol.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU' (MingLiU.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Light.otf) normal normal 303 condensed>) = 10.34215
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Papyrus' (Papyrus.ttc) normal normal 400 condensed>) = 10.25
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Nanum Brush Script' (NanumScript.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple LiSung' (Apple LiSung Light.ttf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Avenir Next' (Avenir Next.ttc) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,017 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trajan Pro 3' (TrajanPro3-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'KufiStandardGK' (KufiStandardGK.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold.ttf) normal normal 700 condensed>) = 10.535
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Cambria Math' (Cambria Math.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hannotate SC' (Hannotate.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS Reference Sans Serif' (MS Reference Sans Serif.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Osaka' (Osaka.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXGeneral' (STIXGeneralBolIta.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Text Condensed' (SFNSTextCondensed-Bold.otf) normal normal 707 condensed>) = 10.541649999999999
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU_HKSCS-ExtB' (MingLiU_HKSCS-ExtB.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pro' (KozGoPro-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:49,018 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Fangsong Std' (AdobeFangsongStd-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Medium.otf) normal normal 643 condensed>) = 10.480849999999998
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Ultralight.otf) normal normal 100 normal>) = 10.335
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial' (Arial Bold.ttf) normal normal 700 normal>) = 0.33499999999999996
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Marlett' (Marlett.ttf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Rounded' (SFCompactRounded-Ultralight.otf) normal normal 100 normal>) = 10.335
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Lucida Console' (Lucida Console.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Arabic' (AdobeArabic-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans CNS' (Hiragino Sans CNS.ttc) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,019 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pr6N' (KozMinPr6N-Heavy.otf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:49,020 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Hebrew' (MyriadHebrew-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,020 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Libian SC' (Libian.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,020 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Myungjo Std' (AdobeMyungjoStd-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,020 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Batang' (Batang.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,020 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kefa' (Kefa.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,020 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-LightItalic.otf) italic normal 300 normal>) = 11.145
2020-10-20 21:03:49,020 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,020 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Consolas' (Consolas Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,020 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gill Sans MT' (Gill Sans MT Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,020 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,021 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,021 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Perpetua' (Perpetua.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,021 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF NS Display Condensed' (SFNSDisplayCondensed-Semibold.otf) normal normal 710 condensed>) = 10.5445
2020-10-20 21:03:49,021 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W7.ttc) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,022 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Microsoft Tai Le' (taile.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,022 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MingLiU_HKSCS' (mingliu_hkscs.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,022 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Mishafi' (Mishafi.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,022 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (Franklin Gothic Book.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,022 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati MT' (GujaratiMT.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,023 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'LingWai SC' (LingWaiSC-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,023 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Brush Script MT' (Brush Script.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,023 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Italic.otf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,023 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Andale Mono' (Andale Mono.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,023 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'SimSun' (SimSun.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,023 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Medium' (Franklin Gothic Medium.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,024 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Weibei TC' (WeibeiTC-Bold.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,024 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,024 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Heiti TC' (STHeiti Light.ttc) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,024 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Xingkai SC' (Xingkai.ttc) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,024 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Franklin Gothic Book' (Franklin Gothic Book Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,024 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W0.ttc) normal normal 100 normal>) = 10.335
2020-10-20 21:03:49,024 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Skia' (Skia.ttf) normal normal 5 normal>) = 10.42525
2020-10-20 21:03:49,024 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gulim' (Gulim.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,024 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Hiragino Sans' (ヒラギノ角ゴシック W5.ttc) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Copperplate' (Copperplate.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'YuKyokasho Yoko' (Kyokasho.ttc) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Arial Narrow' (Arial Narrow Bold Italic.ttf) italic normal 700 condensed>) = 11.535
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Hebrew' (AdobeHebrew-Bold.otf) normal normal 600 normal>) = 10.24
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Apple LiGothic' (Apple LiGothic Medium.ttf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Sinhala Sangam MN' (Sinhala Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-SemiboldIt.otf) italic normal 600 normal>) = 11.24
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Courier New' (Courier New Italic.ttf) italic normal 400 normal>) = 11.05
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Calibri' (Calibri Bold Italic.ttf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-Medium.otf) normal normal 500 normal>) = 10.145
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Zapfino' (Zapfino.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,025 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Chalkduster' (Chalkduster.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Toppan Bunkyu Gothic' (ToppanBunkyuGothic.ttc) normal normal 600 normal>) = 10.24
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'HanziPen SC' (Hanzipen.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Times New Roman' (Times New Roman Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Caslon Pro' (ACaslonPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Semibold.otf) normal normal 600 normal>) = 10.24
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Corbel' (Corbel Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Light.otf) normal normal 300 normal>) = 10.145
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCond.otf) normal normal 700 condensed>) = 10.535
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Mincho Pro' (KozMinPro-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:49,026 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Silom' (Silom.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Myriad Pro' (MyriadPro-BoldCondIt.otf) italic normal 700 condensed>) = 11.535
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Minion Pro' (MinionPro-BoldIt.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXSizeThreeSym' (STIXSizThreeSymReg.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia Bold.ttf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Didot' (Didot.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'STIXNonUnicode' (STIXNonUni.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Garamond Pro' (AGaramondPro-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Adobe Devanagari' (AdobeDevanagari-BoldItalic.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Letter Gothic Std' (LetterGothicStd-BoldSlanted.otf) italic normal 700 normal>) = 11.335
2020-10-20 21:03:49,027 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Text' (SFCompactText-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Constantia' (Constantia.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Charter' (Charter.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Gujarati Sangam MN' (Gujarati Sangam MN.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kozuka Gothic Pr6N' (KozGoPr6N-ExtraLight.otf) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Source Sans Pro' (SourceSansPro-Bold.otf) normal normal 700 normal>) = 10.335
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Palatino Linotype' (Palatino Linotype.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'MS PGothic' (MS PGothic.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Kannada MN' (Kannada MN.ttc) normal normal 250 normal>) = 10.1925
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Bodoni 72' (Bodoni 72.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font '.SF Compact Display' (SFCompactDisplay-Black.otf) normal normal 900 normal>) = 10.525
2020-10-20 21:03:49,028 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trajan Pro 3' (TrajanPro3-Regular.otf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,029 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Verdana' (Verdana.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,029 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Baskerville' (Baskerville.ttc) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,029 [57789] DEBUG    matplotlib.font_manager:1346: [JupyterRequire] findfont: score(<Font 'Trattatello' (Trattatello.ttf) normal normal 400 normal>) = 10.05
2020-10-20 21:03:49,029 [57789] DEBUG    matplotlib.font_manager:1367: [JupyterRequire] findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=20.0 to Arial ('/Library/Fonts/Arial.ttf') with score of 0.050000.
2020-10-20 21:22:56,737 [57789] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x17b0aad50>
2020-10-20 21:22:56,738 [57789] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x17b0aad50> on colorbar
2020-10-20 21:22:56,739 [57789] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
2020-10-21 00:09:38,431 [57789] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x141cdc1d0>
2020-10-21 00:09:38,433 [57789] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x141cdc1d0> on colorbar
2020-10-21 00:09:38,433 [57789] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
2020-10-21 00:22:53,493 [57789] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x14ab26190>
2020-10-21 00:22:53,494 [57789] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x14ab26190> on colorbar
2020-10-21 00:22:53,494 [57789] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
2020-10-21 00:52:19,885 [57789] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x14a30af90>
2020-10-21 00:52:19,887 [57789] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x14a30af90> on colorbar
2020-10-21 00:52:19,887 [57789] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
2020-10-21 00:57:33,065 [57789] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x16e15a1d0>
2020-10-21 00:57:33,065 [57789] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x16e15a1d0> on colorbar
2020-10-21 00:57:33,066 [57789] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
2020-10-21 01:26:31,575 [34009] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-21 01:26:31,576 [34009] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-21 01:26:31,576 [34009] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-21 01:26:31,582 [34009] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-21 01:26:31,588 [34009] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-21 01:26:31,593 [34009] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-21 01:26:32,401 [34009] DEBUG    root:75: [JupyterRequire] Loading Jupyter Require extension.
2020-10-21 01:26:32,402 [34009] DEBUG    root:93: [JupyterRequire] Initializing comms.
2020-10-21 01:26:32,403 [34009] INFO     root:247: [JupyterRequire] Initializing comms.
2020-10-21 01:26:32,425 [34009] DEBUG    root:197: [JupyterRequire] Configuration requested: {'paths': {}, 'shim': None}
2020-10-21 01:26:32,426 [34009] INFO     root:271: [JupyterRequire] Comms have been successfully initialized.
2020-10-21 01:26:32,426 [34009] DEBUG    root:97: [JupyterRequire] Registering comm targets.
2020-10-21 01:26:50,347 [34009] DEBUG    matplotlib:241: [JupyterRequire] (private) matplotlib data path: /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-21 01:26:50,348 [34009] DEBUG    matplotlib:241: [JupyterRequire] matplotlib data path: /Users/macbookpro/miniconda3/envs/cs_ftmle/lib/python3.7/site-packages/matplotlib/mpl-data
2020-10-21 01:26:50,359 [34009] DEBUG    matplotlib:241: [JupyterRequire] CONFIGDIR=/Users/macbookpro/.matplotlib
2020-10-21 01:26:50,393 [34009] DEBUG    matplotlib:1464: [JupyterRequire] matplotlib version 3.3.0
2020-10-21 01:26:50,394 [34009] DEBUG    matplotlib:1465: [JupyterRequire] interactive is False
2020-10-21 01:26:50,394 [34009] DEBUG    matplotlib:1466: [JupyterRequire] platform is darwin
2020-10-21 01:26:50,395 [34009] DEBUG    matplotlib:1467: [JupyterRequire] loaded modules: ['sys', 'builtins', '_frozen_importlib', '_imp', '_thread', '_warnings', '_weakref', 'zipimport', '_frozen_importlib_external', '_io', 'marshal', 'posix', 'encodings', 'codecs', '_codecs', 'encodings.aliases', 'encodings.utf_8', '_signal', '__main__', 'encodings.latin_1', 'io', 'abc', '_abc', '_bootlocale', '_locale', 'site', 'os', 'stat', '_stat', '_collections_abc', 'posixpath', 'genericpath', 'os.path', '_sitebuiltins', 'types', 'importlib', 'importlib._bootstrap', 'importlib._bootstrap_external', 'warnings', 'importlib.util', 'importlib.abc', 'importlib.machinery', 'contextlib', 'collections', 'operator', '_operator', 'keyword', 'heapq', '_heapq', 'itertools', 'reprlib', '_collections', 'functools', '_functools', 'google', 'google.cloud', 'google.logging', 'mpl_toolkits', 'runpy', 'pkgutil', 'weakref', '_weakrefset', 'ipykernel', 'ipykernel._version', 'ipykernel.connect', '__future__', 'json', 'json.decoder', 're', 'enum', 'sre_compile', '_sre', 'sre_parse', 'sre_constants', 'copyreg', 'json.scanner', '_json', 'json.encoder', 'subprocess', 'time', 'signal', 'errno', '_posixsubprocess', 'select', 'selectors', 'collections.abc', 'math', 'threading', 'traceback', 'linecache', 'tokenize', 'token', 'IPython', 'IPython.core', 'IPython.core.getipython', 'IPython.core.release', 'IPython.core.application', 'atexit', 'copy', 'glob', 'fnmatch', 'logging', 'string', '_string', 'shutil', 'zlib', 'bz2', '_compression', '_bz2', 'lzma', '_lzma', 'pwd', 'grp', 'traitlets', 'traitlets.traitlets', 'inspect', 'dis', 'opcode', '_opcode', 'six', 'struct', '_struct', 'traitlets.utils', 'traitlets.utils.getargspec', 'traitlets.utils.importstring', 'ipython_genutils', 'ipython_genutils._version', 'ipython_genutils.py3compat', 'ipython_genutils.encoding', 'locale', 'platform', 'traitlets.utils.sentinel', 'traitlets.utils.bunch', 'traitlets._version', 'traitlets.config', 'traitlets.config.application', 'decorator', 'traitlets.config.configurable', 'traitlets.config.loader', 'argparse', 'gettext', 'ast', '_ast', 'ipython_genutils.path', 'random', 'hashlib', '_hashlib', '_blake2', '_sha3', 'bisect', '_bisect', '_random', 'ipython_genutils.text', 'textwrap', 'ipython_genutils.importstring', 'IPython.core.crashhandler', 'pprint', 'IPython.core.ultratb', 'pydoc', 'sysconfig', 'urllib', 'urllib.parse', '_sysconfigdata_m_darwin_darwin', '_osx_support', 'IPython.core.debugger', 'bdb', 'IPython.utils', 'IPython.utils.PyColorize', 'IPython.utils.coloransi', 'IPython.utils.ipstruct', 'IPython.utils.colorable', 'pygments', 'IPython.utils.py3compat', 'IPython.utils.encoding', 'IPython.core.excolors', 'IPython.testing', 'IPython.testing.skipdoctest', 'pdb', 'cmd', 'code', 'codeop', 'IPython.core.display_trap', 'IPython.utils.path', 'IPython.utils.process', 'IPython.utils._process_posix', 'pexpect', 'pexpect.exceptions', 'pexpect.utils', 'pexpect.expect', 'pexpect.pty_spawn', 'pty', 'tty', 'termios', 'ptyprocess', 'ptyprocess.ptyprocess', 'fcntl', 'resource', 'ptyprocess.util', 'pexpect.spawnbase', 'pexpect.run', 'IPython.utils._process_common', 'shlex', 'IPython.utils.decorators', 'IPython.utils.data', 'IPython.utils.terminal', 'IPython.utils.sysinfo', 'IPython.utils._sysinfo', 'IPython.core.profiledir', 'IPython.paths', 'tempfile', 'IPython.utils.importstring', 'IPython.terminal', 'IPython.terminal.embed', 'IPython.core.compilerop', 'IPython.core.magic_arguments', 'IPython.core.error', 'IPython.utils.text', 'pathlib', 'ntpath', 'IPython.core.magic', 'getopt', 'IPython.core.oinspect', 'typing', 'typing.io', 'typing.re', 'IPython.core.page', 'IPython.core.display', 'binascii', 'mimetypes', 'IPython.lib', 'IPython.lib.security', 'getpass', 'IPython.lib.pretty', 'datetime', '_datetime', 'IPython.utils.openpy', 'IPython.utils.dir2', 'IPython.utils.wildcard', 'pygments.lexers', 'pygments.lexers._mapping', 'pygments.modeline', 'pygments.plugin', 'pygments.util', 'pygments.lexers.python', 'pygments.lexer', 'pygments.filter', 'pygments.filters', 'pygments.token', 'pygments.regexopt', 'pygments.unistring', 'pygments.formatters', 'pygments.formatters._mapping', 'pygments.formatters.html', 'pygments.formatter', 'pygments.styles', 'IPython.core.inputtransformer2', 'IPython.core.interactiveshell', 'pickleshare', 'pickle', '_compat_pickle', '_pickle', 'IPython.core.prefilter', 'IPython.core.autocall', 'IPython.core.macro', 'IPython.core.splitinput', 'IPython.core.alias', 'IPython.core.builtin_trap', 'IPython.core.events', 'backcall', 'backcall.backcall', 'IPython.core.displayhook', 'IPython.core.displaypub', 'IPython.core.extensions', 'IPython.core.formatters', 'IPython.utils.sentinel', 'IPython.core.history', 'sqlite3', 'sqlite3.dbapi2', '_sqlite3', 'IPython.core.logger', 'IPython.core.payload', 'IPython.core.usage', 'IPython.display', 'IPython.lib.display', 'html', 'html.entities', 'IPython.utils.io', 'IPython.utils.capture', 'IPython.utils.strdispatch', 'IPython.core.hooks', 'IPython.utils.syspathcontext', 'IPython.utils.tempdir', 'IPython.utils.contexts', 'IPython.core.async_helpers', 'IPython.terminal.interactiveshell', 'asyncio', 'asyncio.base_events', 'concurrent', 'concurrent.futures', 'concurrent.futures._base', 'socket', '_socket', 'ssl', '_ssl', 'base64', 'asyncio.constants', 'asyncio.coroutines', 'asyncio.base_futures', 'asyncio.format_helpers', 'asyncio.log', 'asyncio.events', 'contextvars', '_contextvars', 'asyncio.base_tasks', '_asyncio', 'asyncio.futures', 'asyncio.protocols', 'asyncio.sslproto', 'asyncio.transports', 'asyncio.tasks', 'asyncio.locks', 'asyncio.runners', 'asyncio.queues', 'asyncio.streams', 'asyncio.subprocess', 'asyncio.unix_events', 'asyncio.base_subprocess', 'asyncio.selector_events', 'prompt_toolkit', 'prompt_toolkit.application', 'prompt_toolkit.application.application', 'prompt_toolkit.buffer', 'prompt_toolkit.application.current', 'prompt_toolkit.application.run_in_terminal', 'prompt_toolkit.eventloop', 'prompt_toolkit.eventloop.async_generator', 'prompt_toolkit.eventloop.utils', 'prompt_toolkit.eventloop.inputhook', 'prompt_toolkit.utils', 'wcwidth', 'wcwidth.wcwidth', 'wcwidth.table_wide', 'wcwidth.table_zero', 'wcwidth.unicode_versions', 'prompt_toolkit.auto_suggest', 'prompt_toolkit.document', 'prompt_toolkit.clipboard', 'prompt_toolkit.clipboard.base', 'prompt_toolkit.selection', 'prompt_toolkit.clipboard.in_memory', 'prompt_toolkit.filters', 'prompt_toolkit.filters.app', 'prompt_toolkit.cache', 'prompt_toolkit.enums', 'prompt_toolkit.filters.base', 'prompt_toolkit.filters.cli', 'prompt_toolkit.filters.utils', 'prompt_toolkit.completion', 'prompt_toolkit.completion.base', 'prompt_toolkit.formatted_text', 'prompt_toolkit.formatted_text.ansi', 'prompt_toolkit.output', 'prompt_toolkit.output.base', 'prompt_toolkit.data_structures', 'prompt_toolkit.styles', 'prompt_toolkit.styles.base', 'prompt_toolkit.styles.defaults', 'prompt_toolkit.styles.named_colors', 'prompt_toolkit.styles.style', 'prompt_toolkit.styles.pygments', 'prompt_toolkit.styles.style_transformation', 'colorsys', 'prompt_toolkit.output.color_depth', 'prompt_toolkit.output.defaults', 'prompt_toolkit.patch_stdout', 'prompt_toolkit.output.vt100', 'array', 'prompt_toolkit.formatted_text.base', 'prompt_toolkit.mouse_events', 'prompt_toolkit.formatted_text.html', 'xml', 'xml.dom', 'xml.dom.domreg', 'xml.dom.minidom', 'xml.dom.minicompat', 'xml.dom.xmlbuilder', 'xml.dom.NodeFilter', 'prompt_toolkit.formatted_text.pygments', 'prompt_toolkit.formatted_text.utils', 'prompt_toolkit.completion.filesystem', 'prompt_toolkit.completion.fuzzy_completer', 'prompt_toolkit.completion.word_completer', 'prompt_toolkit.completion.nested', 'prompt_toolkit.history', 'prompt_toolkit.search', 'prompt_toolkit.key_binding', 'prompt_toolkit.key_binding.key_bindings', 'prompt_toolkit.keys', 'prompt_toolkit.key_binding.key_processor', 'prompt_toolkit.key_binding.vi_state', 'prompt_toolkit.validation', 'prompt_toolkit.input', 'prompt_toolkit.input.base', 'prompt_toolkit.input.defaults', 'prompt_toolkit.input.typeahead', 'prompt_toolkit.key_binding.bindings', 'prompt_toolkit.key_binding.bindings.page_navigation', 'prompt_toolkit.key_binding.bindings.scroll', 'prompt_toolkit.key_binding.defaults', 'prompt_toolkit.key_binding.bindings.basic', 'prompt_toolkit.key_binding.bindings.named_commands', 'prompt_toolkit.layout', 'prompt_toolkit.layout.containers', 'prompt_toolkit.layout.controls', 'prompt_toolkit.lexers', 'prompt_toolkit.lexers.base', 'prompt_toolkit.lexers.pygments', 'prompt_toolkit.layout.processors', 'prompt_toolkit.layout.utils', 'prompt_toolkit.layout.dimension', 'prompt_toolkit.layout.margins', 'prompt_toolkit.layout.mouse_handlers', 'prompt_toolkit.layout.screen', 'prompt_toolkit.layout.layout', 'prompt_toolkit.layout.menus', 'prompt_toolkit.key_binding.bindings.completion', 'prompt_toolkit.key_binding.bindings.cpr', 'prompt_toolkit.key_binding.bindings.emacs', 'prompt_toolkit.key_binding.bindings.mouse', 'prompt_toolkit.key_binding.bindings.vi', 'prompt_toolkit.input.vt100_parser', 'prompt_toolkit.input.ansi_escape_sequences', 'prompt_toolkit.key_binding.digraphs', 'prompt_toolkit.key_binding.emacs_state', 'prompt_toolkit.layout.dummy', 'prompt_toolkit.renderer', 'prompt_toolkit.application.dummy', 'prompt_toolkit.shortcuts', 'prompt_toolkit.shortcuts.dialogs', 'prompt_toolkit.key_binding.bindings.focus', 'prompt_toolkit.widgets', 'prompt_toolkit.widgets.base', 'prompt_toolkit.widgets.toolbars', 'prompt_toolkit.widgets.dialogs', 'prompt_toolkit.widgets.menus', 'prompt_toolkit.shortcuts.progress_bar', 'prompt_toolkit.shortcuts.progress_bar.base', 'prompt_toolkit.shortcuts.progress_bar.formatters', 'prompt_toolkit.shortcuts.prompt', 'prompt_toolkit.key_binding.bindings.auto_suggest', 'prompt_toolkit.key_binding.bindings.open_in_editor', 'prompt_toolkit.shortcuts.utils', 'pygments.style', 'IPython.terminal.debugger', 'IPython.core.completer', 'unicodedata', 'IPython.core.latex_symbols', 'IPython.utils.generics', 'jedi', 'jedi.api', 'parso', 'parso.parser', 'parso.tree', 'parso._compatibility', 'parso.utils', 'parso.pgen2', 'parso.pgen2.generator', 'parso.pgen2.grammar_parser', 'parso.python', 'parso.python.tokenize', 'parso.python.token', 'parso.grammar', 'parso.python.diff', 'difflib', 'parso.python.parser', 'parso.python.tree', 'parso.python.prefix', 'parso.cache', 'gc', 'parso.file_io', 'parso.python.errors', 'parso.normalizer', 'parso.python.pep8', 'jedi._compatibility', 'jedi.file_io', 'queue', '_queue', 'jedi.parser_utils', 'jedi.debug', 'jedi.settings', 'jedi.cache', 'jedi.api.classes', 'jedi.inference', 'jedi.inference.imports', 'jedi.inference.sys_path', 'jedi.inference.cache', 'jedi.inference.base_value', 'jedi.inference.helpers', 'jedi.inference.utils', 'jedi.common', 'jedi.inference.compiled', 'jedi.inference.compiled.value', 'jedi.inference.filters', 'jedi.inference.flow_analysis', 'jedi.inference.recursion', 'jedi.inference.names', 'jedi.inference.docstrings', 'jedi.inference.lazy_value', 'jedi.plugins', 'jedi.inference.compiled.access', 'jedi.inference.compiled.getattr_static', 'jedi.inference.signature', 'jedi.inference.context', 'jedi.inference.analysis', 'jedi.inference.gradual', 'jedi.inference.gradual.typeshed', 'jedi.inference.gradual.stub_value', 'jedi.inference.value', 'jedi.inference.value.module', 'jedi.inference.value.klass', 'jedi.inference.arguments', 'jedi.inference.value.iterable', 'jedi.inference.value.dynamic_arrays', 'jedi.inference.value.function', 'jedi.inference.parser_cache', 'jedi.inference.gradual.generics', 'jedi.inference.value.instance', 'jedi.inference.gradual.typing', 'jedi.inference.gradual.base', 'jedi.inference.gradual.type_var', 'jedi.inference.syntax_tree', 'jedi.inference.gradual.annotation', 'jedi.inference.param', 'jedi.inference.value.decorator', 'jedi.inference.compiled.mixed', 'jedi.inference.gradual.conversion', 'jedi.api.keywords', 'pydoc_data', 'pydoc_data.topics', 'jedi.api.completion_cache', 'jedi.api.helpers', 'jedi.api.interpreter', 'jedi.api.completion', 'jedi.api.strings', 'jedi.api.file_name', 'jedi.api.environment', 'filecmp', 'jedi.inference.compiled.subprocess', 'jedi.inference.compiled.subprocess.functions', 'jedi.api.exceptions', 'jedi.api.project', 'jedi.inference.references', 'jedi.api.errors', 'jedi.api.refactoring', 'jedi.api.refactoring.extract', 'jedi.inference.gradual.utils', 'jedi.plugins.registry', 'jedi.plugins.stdlib', 'jedi.plugins.flask', 'jedi.plugins.pytest', 'jedi.plugins.django', 'IPython.terminal.ptutils', 'IPython.terminal.shortcuts', 'IPython.terminal.magics', 'IPython.lib.clipboard', 'IPython.terminal.pt_inputhooks', 'IPython.terminal.prompts', 'IPython.terminal.ipapp', 'IPython.core.magics', 'IPython.core.magics.auto', 'IPython.core.magics.basic', 'IPython.core.magics.code', 'urllib.request', 'email', 'http', 'http.client', 'email.parser', 'email.feedparser', 'email.errors', 'email._policybase', 'email.header', 'email.quoprimime', 'email.base64mime', 'email.charset', 'email.encoders', 'quopri', 'email.utils', 'email._parseaddr', 'calendar', 'email.message', 'uu', 'email._encoded_words', 'email.iterators', 'urllib.error', 'urllib.response', '_scproxy', 'IPython.core.magics.config', 'IPython.core.magics.display', 'IPython.core.magics.execution', 'timeit', 'cProfile', '_lsprof', 'profile', 'pstats', 'IPython.utils.module_paths', 'IPython.utils.timing', 'IPython.core.magics.extension', 'IPython.core.magics.history', 'IPython.core.magics.logging', 'IPython.core.magics.namespace', 'IPython.core.magics.osm', 'IPython.core.magics.packaging', 'IPython.core.magics.pylab', 'IPython.core.pylabtools', 'IPython.core.magics.script', 'IPython.lib.backgroundjobs', 'IPython.core.shellapp', 'IPython.extensions', 'IPython.extensions.storemagic', 'IPython.utils.frame', 'jupyter_client', 'jupyter_client._version', 'jupyter_client.connect', 'zmq', 'ctypes', '_ctypes', 'ctypes._endian', 'zmq.backend', 'zmq.backend.select', 'zmq.backend.cython', 'zmq.backend.cython.constants', 'cython_runtime', 'zmq.backend.cython.error', '_cython_0_29_17', 'zmq.backend.cython.message', 'zmq.error', 'zmq.backend.cython.context', 'zmq.backend.cython.socket', 'zmq.backend.cython.utils', 'zmq.backend.cython._poll', 'zmq.backend.cython._version', 'zmq.backend.cython._device', 'zmq.backend.cython._proxy_steerable', 'zmq.sugar', 'zmq.sugar.constants', 'zmq.utils', 'zmq.utils.constant_names', 'zmq.sugar.context', 'zmq.sugar.attrsettr', 'zmq.sugar.socket', 'zmq.sugar.poll', 'zmq.utils.jsonapi', 'zmq.utils.strtypes', 'zmq.sugar.frame', 'zmq.sugar.tracker', 'zmq.sugar.version', 'zmq.sugar.stopwatch', 'jupyter_client.localinterfaces', 'jupyter_core', 'jupyter_core.version', 'jupyter_core.paths', 'distutils', 'distutils.util', 'distutils.errors', 'distutils.dep_util', 'distutils.spawn', 'distutils.debug', 'distutils.log', 'distutils.sysconfig', 'jupyter_client.launcher', 'traitlets.log', 'jupyter_client.client', 'jupyter_client.channels', 'jupyter_client.channelsabc', 'jupyter_client.clientabc', 'jupyter_client.manager', 'jupyter_client.kernelspec', 'jupyter_client.managerabc', 'jupyter_client.blocking', 'jupyter_client.blocking.client', 'jupyter_client.blocking.channels', 'jupyter_client.asynchronous', 'jupyter_client.asynchronous.client', 'zmq.asyncio', 'zmq._future', 'jupyter_client.asynchronous.channels', 'jupyter_client.multikernelmanager', 'uuid', '_uuid', 'ipykernel.kernelapp', 'tornado', 'tornado.ioloop', 'numbers', 'tornado.concurrent', 'tornado.log', 'logging.handlers', 'tornado.escape', 'tornado.util', 'tornado.speedups', 'curses', '_curses', 'zmq.eventloop', 'zmq.eventloop.ioloop', 'tornado.platform', 'tornado.platform.asyncio', 'tornado.gen', 'zmq.eventloop.zmqstream', 'ipykernel.iostream', 'imp', 'jupyter_client.session', 'hmac', 'jupyter_client.jsonutil', 'dateutil', 'dateutil._version', 'dateutil.parser', 'dateutil.parser._parser', 'decimal', '_decimal', 'dateutil.relativedelta', 'dateutil._common', 'dateutil.tz', 'dateutil.tz.tz', 'six.moves', 'dateutil.tz._common', 'dateutil.tz._factories', 'dateutil.parser.isoparser', '_strptime', 'jupyter_client.adapter', 'ipykernel.heartbeat', 'ipykernel.ipkernel', 'IPython.utils.tokenutil', 'ipykernel.comm', 'ipykernel.comm.manager', 'ipykernel.comm.comm', 'ipykernel.kernelbase', 'tornado.queues', 'tornado.locks', 'ipykernel.jsonutil', 'ipykernel.zmqshell', 'IPython.core.payloadpage', 'ipykernel.displayhook', 'ipykernel.eventloops', 'distutils.version', 'ipykernel.parentpoller', 'faulthandler', 'ipykernel.datapub', 'ipykernel.serialize', 'ipykernel.pickleutil', 'ipykernel.codeutil', 'IPython.core.completerlib', 'plistlib', 'xml.parsers', 'xml.parsers.expat', 'pyexpat.errors', 'pyexpat.model', 'pyexpat', 'xml.parsers.expat.model', 'xml.parsers.expat.errors', 'appnope', 'appnope._nope', 'ctypes.util', 'ctypes.macholib', 'ctypes.macholib.dyld', 'ctypes.macholib.framework', 'ctypes.macholib.dylib', 'storemagic', 'jupyter_require', 'daiquiri', 'logging.config', 'socketserver', 'daiquiri.output', 'syslog', 'daiquiri.formatter', 'pythonjsonlogger', 'pythonjsonlogger.jsonlogger', 'daiquiri.handlers', 'jupyter_require.__about__', 'jupyter_require.notebook', 'csscompressor', 'jupyter_require.core', 'jupyter_require.magic', 'jupyter_nbutils', 'jupyter_nbutils.__about__', 'jupyter_nbutils.config', 'jupyter_nbutils.utils', 'pandas', 'numpy', 'numpy._globals', 'numpy.__config__', 'numpy.version', 'numpy._distributor_init', 'numpy.core', 'numpy.core.multiarray', 'numpy.core.overrides', 'numpy.core._multiarray_umath', 'numpy.compat', 'numpy.compat._inspect', 'numpy.compat.py3k', 'numpy.core.umath', 'numpy.core.numerictypes', 'numpy.core._string_helpers', 'numpy.core._type_aliases', 'numpy.core._dtype', 'numpy.core.numeric', 'numpy.core.shape_base', 'numpy.core._asarray', 'numpy.core.fromnumeric', 'numpy.core._methods', 'numpy.core._exceptions', 'numpy.core._ufunc_config', 'numpy.core.arrayprint', 'numpy.core.defchararray', 'numpy.core.records', 'numpy.core.memmap', 'numpy.core.function_base', 'numpy.core.machar', 'numpy.core.getlimits', 'numpy.core.einsumfunc', 'numpy.core._add_newdocs', 'numpy.core._multiarray_tests', 'numpy.core._dtype_ctypes', 'numpy.core._internal', 'numpy._pytesttester', 'numpy.lib', 'numpy.lib.mixins', 'numpy.lib.scimath', 'numpy.lib.type_check', 'numpy.lib.ufunclike', 'numpy.lib.index_tricks', 'numpy.matrixlib', 'numpy.matrixlib.defmatrix', 'numpy.linalg', 'numpy.linalg.linalg', 'numpy.lib.twodim_base', 'numpy.linalg.lapack_lite', 'numpy.linalg._umath_linalg', 'numpy.lib.function_base', 'numpy.lib.histograms', 'numpy.lib.stride_tricks', 'numpy.lib.nanfunctions', 'numpy.lib.shape_base', 'numpy.lib.polynomial', 'numpy.lib.utils', 'numpy.lib.arraysetops', 'numpy.lib.npyio', 'numpy.lib.format', 'numpy.lib._datasource', 'numpy.lib._iotools', 'numpy.lib.financial', 'numpy.lib.arrayterator', 'numpy.lib.arraypad', 'numpy.lib._version', 'numpy.fft', 'numpy.fft._pocketfft', 'numpy.fft._pocketfft_internal', 'numpy.fft.helper', 'numpy.polynomial', 'numpy.polynomial.polynomial', 'numpy.polynomial.polyutils', 'numpy.polynomial._polybase', 'numpy.polynomial.chebyshev', 'numpy.polynomial.legendre', 'numpy.polynomial.hermite', 'numpy.polynomial.hermite_e', 'numpy.polynomial.laguerre', 'numpy.random', 'numpy.random._pickle', 'numpy.random.mtrand', 'numpy.random._bit_generator', '_cython_0_29_19', 'numpy.random._common', 'secrets', 'numpy.random._bounded_integers', 'numpy.random._mt19937', 'numpy.random._philox', 'numpy.random._pcg64', 'numpy.random._sfc64', 'numpy.random._generator', 'numpy.ctypeslib', 'numpy.ma', 'numpy.ma.core', 'numpy.ma.extras', 'pytz', 'pytz.exceptions', 'pytz.lazy', 'pytz.tzinfo', 'pytz.tzfile', 'pandas.compat', 'pandas.compat.numpy', 'pandas._libs', 'pandas._libs.tslibs', 'pandas._libs.tslibs.conversion', 'pandas._libs.tslibs.c_timestamp', 'pandas._libs.tslibs.nattype', '_cython_0_29_20', 'pandas._libs.missing', 'pandas._libs.tslibs.np_datetime', 'pandas._libs.ops_dispatch', 'pandas._libs.tslibs.timezones', 'pandas._libs.tslibs.tzconversion', 'pandas._libs.tslibs.timedeltas', 'pandas._libs.tslibs.offsets', 'pandas._libs.tslibs.ccalendar', 'pandas._config', 'pandas._config.config', 'pandas._config.dates', 'pandas._config.display', 'pandas._config.localization', 'pandas._libs.tslibs.strptime', 'pandas._libs.tslibs.fields', 'pandas._libs.tslibs.parsing', 'pandas._libs.tslibs.frequencies', 'pandas._libs.tslibs.period', 'pandas._libs.tslibs.timestamps', 'pandas._libs.tslibs.resolution', 'pandas._libs.hashtable', 'pandas._libs.lib', 'fractions', 'pandas._libs.tslib', 'pandas.core', 'pandas.core.config_init', 'pandas.core.api', 'pandas.core.dtypes', 'pandas.core.dtypes.dtypes', 'pandas._libs.interval', 'pandas._libs.algos', 'pandas._typing', 'pandas.core.dtypes.base', 'pandas.errors', 'pandas.core.dtypes.generic', 'pandas.core.dtypes.inference', 'pandas.core.dtypes.missing', 'pandas.core.dtypes.common', 'pandas.core.algorithms', 'pandas.util', 'pandas.util._decorators', 'pandas._libs.properties', 'pandas.core.util', 'pandas.core.util.hashing', 'pandas._libs.hashing', 'pandas.core.dtypes.cast', 'pandas.util._validators', 'pandas.core.common', 'pandas.core.construction', 'pandas.core.indexers', 'pandas.core.arrays', 'pandas.core.arrays.base', 'pandas.compat.numpy.function', 'pandas.core.ops', 'pandas.core.ops.array_ops', 'pandas._libs.ops', 'pandas.core.ops.missing', 'pandas.core.ops.roperator', 'pandas.core.ops.dispatch', 'pandas.core.ops.invalid', 'pandas.core.ops.common', 'pandas.core.ops.docstrings', 'pandas.core.ops.mask_ops', 'pandas.core.ops.methods', 'pandas.core.missing', 'pandas.compat._optional', 'pandas.core.sorting', 'pandas.core.arrays.boolean', 'pandas.core.nanops', 'pandas.core.arrays.masked', 'pandas.core.arrays.categorical', 'pandas.core.accessor', 'pandas.core.base', 'pandas.io', 'pandas.io.formats', 'pandas.io.formats.console', 'pandas.core.arrays.datetimes', 'pandas.core.arrays.datetimelike', 'pandas.tseries', 'pandas.tseries.frequencies', 'pandas.tseries.offsets', 'dateutil.easter', 'pandas.core.arrays._ranges', 'pandas.core.arrays.integer', 'pandas.core.tools', 'pandas.core.tools.numeric', 'pandas.core.arrays.interval', 'pandas.core.indexes', 'pandas.core.indexes.base', 'pandas._libs.index', 'pandas._libs.join', 'pandas.core.dtypes.concat', 'pandas.core.indexes.frozen', 'pandas.io.formats.printing', 'pandas.core.strings', 'pandas.core.arrays.numpy_', 'pandas.core.arrays.period', 'pandas.core.arrays.sparse', 'pandas.core.arrays.sparse.accessor', 'pandas.core.arrays.sparse.array', 'pandas._libs.sparse', 'pandas.core.arrays.sparse.dtype', 'pandas.core.arrays.string_', 'pandas.core.arrays.timedeltas', 'pandas.core.groupby', 'pandas.core.groupby.generic', 'pandas.core.frame', 'pandas.core.generic', 'pandas.core.indexes.api', 'pandas.core.indexes.category', 'pandas.core.indexes.extension', 'pandas.core.indexes.datetimes', 'pandas.core.indexes.datetimelike', 'pandas.core.indexes.numeric', 'pandas.core.tools.timedeltas', 'pandas.core.tools.datetimes', 'pandas.arrays', 'pandas.core.indexes.interval', 'pandas.util._exceptions', 'pandas.core.indexes.multi', 'pandas.core.indexes.timedeltas', 'pandas.core.indexes.period', 'pandas.core.indexes.range', 'pandas.core.indexing', 'pandas._libs.indexing', 'pandas.core.internals', 'pandas.core.internals.blocks', 'pandas._libs.writers', 'pandas._libs.internals', 'pandas.core.internals.managers', 'pandas.core.internals.concat', 'pandas.io.formats.format', 'pandas.io.common', 'gzip', 'mmap', 'zipfile', 'pandas.core.internals.construction', 'pandas.core.series', 'pandas._libs.reshape', 'pandas.core.indexes.accessors', 'pandas.plotting', 'pandas.plotting._core', 'pandas.plotting._misc', 'pandas.core.window', 'pandas.core.window.ewm', 'pandas._libs.window', 'pandas._libs.window.aggregations', 'pandas.core.window.common', 'pandas.core.groupby.base', 'pandas.core.window.rolling', 'pandas.core.window.indexers', 'pandas._libs.window.indexers', 'pandas.core.window.numba_', 'pandas.core.window.expanding', 'pandas.core.groupby.groupby', 'pandas._libs.groupby', 'pandas.core.groupby.ops', 'pandas._libs.reduction', 'pandas.core.groupby.grouper', 'pandas.core.groupby.categorical', 'pandas.tseries.api', 'pandas.core.computation', 'pandas.core.computation.api', 'pandas.core.computation.eval', 'pandas.core.computation.engines', 'pandas.core.computation.align', 'pandas.core.computation.common', 'pandas.core.computation.ops', 'pandas.core.computation.scope', 'pandas.compat.chainmap', 'pandas.core.computation.expr', 'pandas.core.computation.parsing', 'pandas.core.reshape', 'pandas.core.reshape.api', 'pandas.core.reshape.concat', 'pandas.core.reshape.melt', 'pandas.core.reshape.merge', 'pandas.core.reshape.pivot', 'pandas.core.reshape.util', 'pandas.core.reshape.reshape', 'pandas.core.reshape.tile', 'pandas.api', 'pandas.api.extensions', 'pandas.api.indexers', 'pandas.api.types', 'pandas.core.dtypes.api', 'pandas.util._print_versions', 'pandas.io.api', 'pandas.io.clipboards', 'pandas.io.excel', 'pandas.io.excel._base', 'pandas._libs.parsers', 'csv', '_csv', 'pandas.io.excel._util', 'pandas.io.parsers', 'pandas.io.date_converters', 'pandas.io.excel._odfreader', 'pandas.io.excel._openpyxl', 'pandas.io.excel._xlrd', 'pandas.io.excel._pyxlsb', 'pandas.io.excel._xlsxwriter', 'pandas._libs.json', 'pandas.io.excel._xlwt', 'pandas.io.feather_format', 'pandas.io.gbq', 'pandas.io.html', 'pandas.io.json', 'pandas.io.json._json', 'pandas.io.json._normalize', 'pandas.io.json._table_schema', 'pandas.io.orc', 'pandas.io.parquet', 'pandas.io.pickle', 'pandas.compat.pickle_compat', 'pandas.io.pytables', 'pandas.core.computation.pytables', 'pandas.io.sas', 'pandas.io.sas.sasreader', 'pandas.io.spss', 'pandas.io.sql', 'pandas.io.stata', 'pandas.util._tester', 'pandas.testing', 'pandas._testing', 'pandas._libs.testing', 'pandas._version', 'matplotlib', 'matplotlib.cbook', 'matplotlib.cbook.deprecation', 'matplotlib.rcsetup', 'matplotlib.animation', 'matplotlib._animation_data', 'matplotlib.fontconfig_pattern', 'pyparsing', 'matplotlib.colors', 'matplotlib.docstring', 'matplotlib._color_data', 'cycler', 'matplotlib._version', 'matplotlib.ft2font', 'kiwisolver']
2020-10-21 01:26:50,674 [34009] DEBUG    matplotlib:241: [JupyterRequire] CACHEDIR=/Users/macbookpro/.matplotlib
2020-10-21 01:26:50,686 [34009] DEBUG    matplotlib.font_manager:1436: [JupyterRequire] Using fontManager instance from /Users/macbookpro/.matplotlib/fontlist-v330.json
2020-10-21 01:26:51,319 [34009] DEBUG    matplotlib.pyplot:273: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-21 01:26:51,352 [34009] DEBUG    matplotlib.pyplot:273: [JupyterRequire] Loaded backend module://ipykernel.pylab.backend_inline version unknown.
2020-10-21 02:10:25,540 [57789] DEBUG    matplotlib.colorbar:600: [JupyterRequire] locator: <matplotlib.colorbar._ColorbarAutoLocator object at 0x147c53e90>
2020-10-21 02:10:25,541 [57789] DEBUG    matplotlib.colorbar:645: [JupyterRequire] Using auto colorbar locator <matplotlib.colorbar._ColorbarAutoLocator object at 0x147c53e90> on colorbar
2020-10-21 02:10:25,541 [57789] DEBUG    matplotlib.colorbar:799: [JupyterRequire] Setting pcolormesh
